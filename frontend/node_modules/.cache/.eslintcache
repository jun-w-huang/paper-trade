[{"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/index.tsx":"1","/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/App.tsx":"2","/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/Dashboard.tsx":"3","/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/landingPage/LandingPage.tsx":"4","/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/auth/SignUp.tsx":"5","/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/auth/Login.tsx":"6","/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/SearchForm.tsx":"7","/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/helpers.tsx":"8","/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/PortfolioDetails.tsx":"9","/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/TopTenStocksList.tsx":"10","/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/Header.tsx":"11","/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/OwnedStocksList.tsx":"12","/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/StockResultDisplay.tsx":"13","/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/BuyAndSellForm.tsx":"14","/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/PieChart.tsx":"15"},{"size":603,"mtime":1658712689354,"results":"16","hashOfConfig":"17"},{"size":965,"mtime":1659582164301,"results":"18","hashOfConfig":"17"},{"size":6142,"mtime":1659497360119,"results":"19","hashOfConfig":"17"},{"size":1122,"mtime":1659582006382,"results":"20","hashOfConfig":"17"},{"size":2740,"mtime":1659334569870,"results":"21","hashOfConfig":"17"},{"size":2637,"mtime":1659582310823,"results":"22","hashOfConfig":"17"},{"size":1711,"mtime":1659424994294,"results":"23","hashOfConfig":"17"},{"size":2751,"mtime":1659497414193,"results":"24","hashOfConfig":"17"},{"size":1441,"mtime":1659424611177,"results":"25","hashOfConfig":"17"},{"size":2802,"mtime":1659496963698,"results":"26","hashOfConfig":"17"},{"size":310,"mtime":1659335302626,"results":"27","hashOfConfig":"17"},{"size":2612,"mtime":1659496940054,"results":"28","hashOfConfig":"17"},{"size":1871,"mtime":1659148248755,"results":"29","hashOfConfig":"17"},{"size":2952,"mtime":1659148234013,"results":"30","hashOfConfig":"17"},{"size":1709,"mtime":1659412542769,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"1o6a5pp",{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"35"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/index.tsx",["66"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["67","68"],"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/App.tsx",[],"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/Dashboard.tsx",[],"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/landingPage/LandingPage.tsx",[],"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/auth/SignUp.tsx",["69"],"import { useState } from \"react\";\nimport { NavLink, Route, useNavigate } from \"react-router-dom\";\nimport \"../styles/Auth.css\";\n\nexport default function SignUp() {\n  const navigate = useNavigate();\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const newUser = formData;\n\n    // attempt to register new user in database\n    fetch(`http://localhost:5000/users/add`, {\n      method: \"POST\",\n      body: JSON.stringify(newUser),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(async (response) => {\n        const isJson = response.headers\n          .get(\"content-type\")\n          ?.includes(\"application/json\");\n\n        // checks if the response is of JSON type and parses it accordingly.\n        const data = isJson && (await response.json());\n\n        // check for erroneous response\n        if (!response.ok) {\n          // return error to catch block\n          return Promise.reject(data);\n        }\n        // no error, continue to redirect to login page.\n        navigate(\"/login\");\n      })\n      .catch((err) => {\n        setErrorMessage(err.msg);\n      });\n  };\n\n  function updateFormData(value: any) {\n    return setFormData((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  return (\n    <div id=\"background-container\">\n      <div id=\"auth\">\n        <div id=\"title\">\n          <header>Paper Trade</header>\n        </div>\n        <hr id=\"separator\"></hr>\n        <form id=\"auth-form\" onSubmit={onSubmit}>\n          <label htmlFor=\"username\">Create a username: </label>\n          <div id=\"usernameInput\">\n            <input\n              type=\"text\"\n              id=\"username\"\n              placeholder=\"username\"\n              defaultValue=\"\"\n              onChange={(e) => updateFormData({ username: e.target.value })}\n            />\n          </div>\n          <label htmlFor=\"password\">Password: </label>\n          <div id=\"passwordInput\">\n            <input\n              type=\"text\"\n              id=\"password\"\n              placeholder=\"password\"\n              defaultValue=\"\"\n              onChange={(e) => updateFormData({ password: e.target.value })}\n            />\n          </div>\n          <div id=\"errorDisplay\">{errorMessage}</div>\n          <input className=\"auth-btn\" type=\"submit\" value=\"Register!\" />\n        </form>\n        <hr id=\"separator\"></hr>\n        <div id=\"alt-auth-container\">\n          <b>Already have an account?</b>\n          <NavLink className=\"nav-link\" to=\"/login\">\n            Login\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/auth/Login.tsx",["70","71"],"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/SearchForm.tsx",[],"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/helpers.tsx",["72","73"],"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/PortfolioDetails.tsx",["74"],"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/TopTenStocksList.tsx",[],"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/Header.tsx",[],"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/OwnedStocksList.tsx",["75"],"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/StockResultDisplay.tsx",[],"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/BuyAndSellForm.tsx",["76"],"import React, { useLayoutEffect, useState } from \"react\";\nimport { getStockIndex, getThisUserJSON } from \"./helpers\";\nimport { handleTradeProps, IRootObject } from \"./interfaces\";\n\ninterface BuyAndSellFormProps {\n  token: string;\n  stockJSON: IRootObject;\n  handleBuy: (props: handleTradeProps) => Promise<void>;\n  handleSell: (props: handleTradeProps) => Promise<void>;\n}\n\nexport default function BuyAndSellForm(props: BuyAndSellFormProps) {\n  const [quantity, setQuantity] = useState(100);\n\n  const [cost, setCost] = useState(0);\n  const [stockIsOwned, setStockIsOwned] = useState(false);\n  const [tradeInProgress, setTradeInProgress] = useState(false);\n\n  useLayoutEffect(() => {\n    // checks if the stock searched is owned by the user and displays a sell button if necessary\n    getThisUserJSON(props.token).then((json) => {\n      let i = getStockIndex(json, props.stockJSON);\n      i === -1 ? setStockIsOwned(false) : setStockIsOwned(true);\n    });\n    setCost(quantity * props.stockJSON.latestPrice ?? \"0\");\n  }, [props.stockJSON]);\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuantity(parseInt(e.target.value));\n    setCost(parseInt(e.target.value) * props.stockJSON.latestPrice ?? 0);\n  };\n\n  async function onBuy(e: React.MouseEvent<HTMLInputElement, MouseEvent>) {\n    const handleTradeProps = {\n      cost: cost,\n      quantity: quantity,\n      stockJSON: props.stockJSON,\n    };\n    setTradeInProgress(true);\n    props.handleBuy(handleTradeProps).then(async () => {\n      getThisUserJSON(props.token).then((json) => {\n        let i = getStockIndex(json, props.stockJSON);\n        i === -1 ? setStockIsOwned(false) : setStockIsOwned(true);\n        setTradeInProgress(false);\n      });\n    });\n  }\n\n  async function onSell(e: React.MouseEvent<HTMLInputElement, MouseEvent>) {\n    const handleTradeProps = {\n      cost: cost,\n      quantity: quantity,\n      stockJSON: props.stockJSON,\n    };\n    setTradeInProgress(true);\n    props.handleSell(handleTradeProps).then(async () => {\n      getThisUserJSON(props.token).then((json) => {\n        let i = getStockIndex(json, props.stockJSON);\n        i === -1 ? setStockIsOwned(false) : setStockIsOwned(true);\n        setTradeInProgress(false);\n      });\n    });\n  }\n\n  return (\n    <div id=\"BuyForm\">\n      <form>\n        <label htmlFor=\"quantity\">Quantity: </label>\n        <input\n          type=\"text\"\n          id=\"quantity\"\n          defaultValue=\"100\"\n          onChange={onChange}\n        />\n        <input\n          type=\"button\"\n          disabled={!tradeInProgress && quantity ? false : true}\n          name=\"buyButton\"\n          value=\"Buy\"\n          onClick={(e) => onBuy(e)}\n        />\n        <input\n          type=\"button\"\n          disabled={stockIsOwned && !tradeInProgress && quantity ? false : true}\n          value=\"Sell\"\n          onClick={(e) => onSell(e)}\n        />\n      </form>\n      <p>Cost / Revenue: {cost.toFixed(2)}</p>\n    </div>\n  );\n}\n","/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/PieChart.tsx",["77","78"],{"ruleId":"79","severity":1,"message":"80","line":4,"column":8,"nodeType":"81","messageId":"82","endLine":4,"endColumn":23},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"79","severity":1,"message":"87","line":2,"column":19,"nodeType":"81","messageId":"82","endLine":2,"endColumn":24},{"ruleId":"79","severity":1,"message":"87","line":2,"column":19,"nodeType":"81","messageId":"82","endLine":2,"endColumn":24},{"ruleId":"79","severity":1,"message":"88","line":2,"column":26,"nodeType":"81","messageId":"82","endLine":2,"endColumn":32},{"ruleId":"79","severity":1,"message":"89","line":1,"column":10,"nodeType":"81","messageId":"82","endLine":1,"endColumn":16},{"ruleId":"79","severity":1,"message":"90","line":1,"column":18,"nodeType":"81","messageId":"82","endLine":1,"endColumn":27},{"ruleId":"91","severity":1,"message":"92","line":35,"column":13,"nodeType":"93","endLine":35,"endColumn":64},{"ruleId":"94","severity":1,"message":"95","line":37,"column":6,"nodeType":"96","endLine":37,"endColumn":8,"suggestions":"97"},{"ruleId":"94","severity":1,"message":"98","line":26,"column":6,"nodeType":"96","endLine":26,"endColumn":23,"suggestions":"99"},{"ruleId":"79","severity":1,"message":"100","line":1,"column":24,"nodeType":"81","messageId":"82","endLine":1,"endColumn":32},{"ruleId":"101","severity":1,"message":"102","line":17,"column":30,"nodeType":"103","messageId":"104","endLine":17,"endColumn":32},"@typescript-eslint/no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["105"],"no-negated-in-lhs",["106"],"'Route' is defined but never used.","'Routes' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useLayoutEffect has a missing dependency: 'props.stock.symbol'. Either include it or remove the dependency array.","ArrayExpression",["107"],"React Hook useLayoutEffect has missing dependencies: 'props.token' and 'quantity'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setCost' needs the current value of 'quantity'.",["108"],"'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [props.stock.symbol]",{"range":"113","text":"114"},"Update the dependencies array to be: [props.stockJSON, props.token, quantity]",{"range":"115","text":"116"},[1263,1265],"[props.stock.symbol]",[1020,1037],"[props.stockJSON, props.token, quantity]"]