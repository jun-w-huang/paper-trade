{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/PaperTrade.tsx\";\nimport React from \"react\";\nimport \"./styles/PaperTrade.css\";\nimport PortfolioDetails from \"./components/PortfolioDetails\";\nimport SearchForm from \"./components/forms/SearchForm\";\nimport StockList from \"./components/stockList\";\nimport Header from \"./components/header\";\nimport { getThisUserJSON } from \"./helpers\";\nimport TopTenStocksList from \"./components/TopTenStocksList\";\nimport CreatePortfolio from \"./components/CreatePortfolio\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PaperTrade extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.initialState = {\n      token: this.props.token,\n      userJSON: {\n        _id: {\n          $oid: \"\"\n        },\n        username: \"\",\n        password: \"\",\n        portfolio: {\n          name: \"\",\n          cash: 0\n        },\n        stocks: []\n      },\n      JSONOrString: \"\"\n    };\n    this.state = this.initialState;\n  }\n\n  componentDidMount() {\n    getThisUserJSON(this.props.token).then(userJSON => {\n      if (userJSON) {\n        this.setState({\n          userJSON: userJSON\n        });\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"helloo component is updating!\");\n    getThisUserJSON(this.props.token).then(userJSON => {\n      var _prevState$userJSON, _prevState$userJSON2;\n\n      if (userJSON.stocks !== ((_prevState$userJSON = prevState.userJSON) === null || _prevState$userJSON === void 0 ? void 0 : _prevState$userJSON.stocks) && (_prevState$userJSON2 = prevState.userJSON) !== null && _prevState$userJSON2 !== void 0 && _prevState$userJSON2.stocks) {\n        this.setState({\n          userJSON: userJSON\n        });\n      }\n    });\n  }\n\n  handleSearch(JSONOrString) {\n    if (typeof JSONOrString === \"string\") {\n      this.setState({\n        JSONOrString: JSONOrString\n      });\n    } else {\n      this.setState({\n        JSONOrString: JSONOrString\n      });\n    }\n  }\n\n  handleBuy() {\n    console.log(\"handlebuy running\");\n    getThisUserJSON(this.props.token).then(userJSON => {\n      console.log(userJSON);\n\n      if (userJSON) {\n        this.setState({\n          userJSON: userJSON\n        });\n      }\n    });\n  }\n\n  render() {\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleBuy = this.handleBuy.bind(this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" token is $\", this.state.token]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        username: this.state.userJSON.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), !this.state.userJSON.portfolio.name && /*#__PURE__*/_jsxDEV(CreatePortfolio, {\n        userJSON: this.state.userJSON\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), this.state.userJSON.portfolio.name && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(PortfolioDetails, {\n          portfolio: this.state.userJSON.portfolio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"forms\",\n          children: /*#__PURE__*/_jsxDEV(SearchForm, {\n            userJSON: this.state.userJSON,\n            JSONOrString: this.state.JSONOrString,\n            handleSearch: this.handleSearch,\n            handleBuy: this.handleBuy\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), this.state.userJSON.stocks && /*#__PURE__*/_jsxDEV(StockList, {\n          stocks: this.state.userJSON.stocks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TopTenStocksList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default PaperTrade;","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/PaperTrade.tsx"],"names":["React","PortfolioDetails","SearchForm","StockList","Header","getThisUserJSON","TopTenStocksList","CreatePortfolio","PaperTrade","Component","initialState","token","props","userJSON","_id","$oid","username","password","portfolio","name","cash","stocks","JSONOrString","state","componentDidMount","then","setState","componentDidUpdate","prevProps","prevState","console","log","handleSearch","handleBuy","render","bind"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { IRootObject, userID, userJSON } from \"./interfaces\";\nimport \"./styles/PaperTrade.css\";\n\nimport PortfolioDetails from \"./components/PortfolioDetails\";\nimport SearchForm from \"./components/forms/SearchForm\";\nimport StockList from \"./components/stockList\";\nimport Header from \"./components/header\";\n\nimport { getThisUserJSON } from \"./helpers\";\nimport TopTenStocksList from \"./components/TopTenStocksList\";\nimport CreatePortfolio from \"./components/CreatePortfolio\";\n\ntype PaperTradeProps = {\n  token: string;\n};\ntype PaperTradeState = {\n  token: string;\n  userJSON?: userJSON;\n  JSONOrString: IRootObject | string;\n};\n\nclass PaperTrade extends React.Component<PaperTradeProps, PaperTradeState> {\n  initialState = {\n    token: this.props.token,\n    userJSON: {\n      _id: {\n        $oid: \"\",\n      },\n      username: \"\",\n      password: \"\",\n      portfolio: {\n        name: \"\",\n        cash: 0,\n      },\n      stocks: [],\n    },\n    JSONOrString: \"\",\n  };\n  state = this.initialState;\n\n  componentDidMount() {\n    getThisUserJSON(this.props.token).then((userJSON) => {\n      if (userJSON) {\n        this.setState({\n          userJSON: userJSON,\n        });\n      }\n    });\n  }\n\n  componentDidUpdate(prevProps: PaperTradeProps, prevState: PaperTradeState) {\n    console.log(\"helloo component is updating!\");\n    getThisUserJSON(this.props.token).then((userJSON) => {\n      if (\n        userJSON.stocks !== prevState.userJSON?.stocks &&\n        prevState.userJSON?.stocks\n      ) {\n        this.setState({\n          userJSON: userJSON,\n        });\n      }\n    });\n  }\n\n  handleSearch(JSONOrString: IRootObject | string) {\n    if (typeof JSONOrString === \"string\") {\n      this.setState({\n        JSONOrString: JSONOrString,\n      });\n    } else {\n      this.setState({\n        JSONOrString: JSONOrString,\n      });\n    }\n  }\n\n  handleBuy() {\n    console.log(\"handlebuy running\");\n    getThisUserJSON(this.props.token).then((userJSON) => {\n      console.log(userJSON);\n      if (userJSON) {\n        this.setState({\n          userJSON: userJSON,\n        });\n      }\n    });\n  }\n\n  render() {\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleBuy = this.handleBuy.bind(this);\n\n    return (\n      <div className=\"container\">\n        <p> token is ${this.state.token}</p>\n        <Header username={this.state.userJSON.username} />\n        {!this.state.userJSON.portfolio.name && (\n          <CreatePortfolio userJSON={this.state.userJSON} />\n        )}\n        {this.state.userJSON.portfolio.name && (\n          <div>\n            <PortfolioDetails portfolio={this.state.userJSON.portfolio} />\n            <div id=\"forms\">\n              <SearchForm\n                userJSON={this.state.userJSON}\n                JSONOrString={this.state.JSONOrString}\n                handleSearch={this.handleSearch}\n                handleBuy={this.handleBuy}\n              />\n            </div>\n            {this.state.userJSON.stocks && (\n              <StockList stocks={this.state.userJSON.stocks} />\n            )}\n            <TopTenStocksList />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default PaperTrade;\n"]},"metadata":{},"sourceType":"module"}