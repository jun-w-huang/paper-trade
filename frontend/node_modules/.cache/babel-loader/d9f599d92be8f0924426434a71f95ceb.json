{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/CreatePortfolio.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreatePortfolio(props) {\n  _s();\n\n  const [formData, setFormData] = useState({\n    name: \"My First Portfolio\",\n    cash: 1000000\n  });\n\n  const handleChange = evt => {\n    const name = evt.target.name;\n    const cash = evt.target.cash;\n    setFormData({\n      name,\n      cash\n    });\n  };\n\n  const onSubmit = async e => {\n    e.preventDefault(); // validate?\n\n    const editedUser = {\n      portfolio: {\n        name: formData.name,\n        cash: formData.cash\n      },\n      stocks: []\n    };\n    console.log(props.userJSON);\n    fetch(`http://localhost:5000/update/${props.userJSON._id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedUser),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"createPortfolioContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"createPortfolioForm\",\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"portfolioNameInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"portfolioName\",\n          children: \"Your portfolio name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"portfolioName\",\n          name: \"portfolioName\",\n          defaultValue: \"My First Portfolio\",\n          onChange: e => {\n            handleChange;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"cashInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cash\",\n          children: \"Starting Cash: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"cash\",\n          name: \"cash\",\n          defaultValue: \"100000\",\n          onChange: e => {\n            handleChange;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreatePortfolio, \"o0nNhGV0HeqUQNkNq2wtUWTI42o=\");\n\n_c = CreatePortfolio;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePortfolio\");","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/CreatePortfolio.tsx"],"names":["useState","CreatePortfolio","props","formData","setFormData","name","cash","handleChange","evt","target","onSubmit","e","preventDefault","editedUser","portfolio","stocks","console","log","userJSON","fetch","_id","method","body","JSON","stringify","headers"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAOA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAsD;AAAA;;AACnE,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC;AACvCK,IAAAA,IAAI,EAAE,oBADiC;AAEvCC,IAAAA,IAAI,EAAE;AAFiC,GAAD,CAAxC;;AAKA,QAAMC,YAAY,GAAIC,GAAD,IAAS;AAC5B,UAAMH,IAAI,GAAGG,GAAG,CAACC,MAAJ,CAAWJ,IAAxB;AACA,UAAMC,IAAI,GAAGE,GAAG,CAACC,MAAJ,CAAWH,IAAxB;AACAF,IAAAA,WAAW,CAAC;AACVC,MAAAA,IADU;AAEVC,MAAAA;AAFU,KAAD,CAAX;AAID,GAPD;;AASA,QAAMI,QAAQ,GAAG,MAAOC,CAAP,IAA+C;AAC9DA,IAAAA,CAAC,CAACC,cAAF,GAD8D,CAG9D;;AACA,UAAMC,UAAU,GAAG;AACjBC,MAAAA,SAAS,EAAE;AACTT,QAAAA,IAAI,EAAEF,QAAQ,CAACE,IADN;AAETC,QAAAA,IAAI,EAAEH,QAAQ,CAACG;AAFN,OADM;AAKjBS,MAAAA,MAAM,EAAE;AALS,KAAnB;AAQAC,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAK,CAACgB,QAAlB;AAEAC,IAAAA,KAAK,CAAE,gCAA+BjB,KAAK,CAACgB,QAAN,CAAeE,GAAI,EAApD,EAAuD;AAC1DC,MAAAA,MAAM,EAAE,MADkD;AAE1DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,UAAf,CAFoD;AAG1DY,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHiD,KAAvD,CAAL;AAOD,GArBD;;AAuBA,sBACE;AAAK,IAAA,EAAE,EAAC,0BAAR;AAAA,2BACE;AAAM,MAAA,EAAE,EAAC,qBAAT;AAA+B,MAAA,QAAQ,EAAGd,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAAxD;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,oBAAR;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,eADP;AAEE,UAAA,IAAI,EAAC,eAFP;AAGE,UAAA,YAAY,EAAC,oBAHf;AAIE,UAAA,QAAQ,EAAGA,CAAD,IAAO;AACfJ,YAAAA,YAAY;AACb;AANH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAYE;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,YAAY,EAAC,QAHf;AAIE,UAAA,QAAQ,EAAGI,CAAD,IAAO;AACfJ,YAAAA,YAAY;AACb;AANH;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAZF,eAuBE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GAnEuBN,e;;KAAAA,e","sourcesContent":["import { useState } from \"react\";\nimport { userJSON } from \"../interfaces\";\n\ninterface CreatePortfolioProps {\n  userJSON: userJSON;\n}\n\nexport default function CreatePortfolio(props: CreatePortfolioProps) {\n  const [formData, setFormData] = useState({\n    name: \"My First Portfolio\",\n    cash: 1000000,\n  });\n\n  const handleChange = (evt) => {\n    const name = evt.target.name;\n    const cash = evt.target.cash;\n    setFormData({\n      name,\n      cash,\n    });\n  };\n\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    // validate?\n    const editedUser = {\n      portfolio: {\n        name: formData.name,\n        cash: formData.cash,\n      },\n      stocks: [],\n    };\n\n    console.log(props.userJSON);\n\n    fetch(`http://localhost:5000/update/${props.userJSON._id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedUser),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  };\n\n  return (\n    <div id=\"createPortfolioContainer\">\n      <form id=\"createPortfolioForm\" onSubmit={(e) => onSubmit(e)}>\n        <div id=\"portfolioNameInput\">\n          <label htmlFor=\"portfolioName\">Your portfolio name: </label>\n          <input\n            type=\"portfolioName\"\n            name=\"portfolioName\"\n            defaultValue=\"My First Portfolio\"\n            onChange={(e) => {\n              handleChange;\n            }}\n          />\n        </div>\n        <div id=\"cashInput\">\n          <label htmlFor=\"cash\">Starting Cash: </label>\n          <input\n            type=\"cash\"\n            name=\"cash\"\n            defaultValue=\"100000\"\n            onChange={(e) => {\n              handleChange;\n            }}\n          />\n        </div>\n        <input type=\"submit\" value=\"Create\" />\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}