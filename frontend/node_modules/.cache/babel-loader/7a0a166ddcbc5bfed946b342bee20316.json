{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/create.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Create() {\n  _s();\n\n  const [form, setForm] = useState({\n    symbol: \"\",\n    quantity: \"\"\n  });\n  const navigate = useNavigate(); // These methods will update the state properties.\n\n  function updateForm(value) {\n    return setForm(prev => {\n      return { ...prev,\n        ...value\n      };\n    });\n  } // This function will handle the submission.\n\n\n  async function onSubmit(e) {\n    e.preventDefault(); // When a post request is sent to the create url, we'll add a new record to the database.\n\n    const newStock = { ...form\n    };\n    console.log(newStock);\n    console.log(JSON.stringify(newStock));\n    await fetch(\"http://localhost:5000/stock/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newStock)\n    }).catch(error => {\n      window.alert(error);\n      return;\n    });\n    setForm({\n      symbol: \"\",\n      quantity: \"\"\n    });\n    navigate(\"/\");\n  } // This following section will display the form that takes the input from the user.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Record\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"symbol\",\n          children: \"Symbol\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"symbol\",\n          value: form.symbol,\n          onChange: e => updateForm({\n            symbol: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"quantity\",\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          id: \"quantity\",\n          value: form.quantity,\n          onChange: e => updateForm({\n            quantity: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Create person\",\n          className: \"btn btn-primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 4\n  }, this);\n}\n\n_s(Create, \"Sfln4c5SFQ5iw+KRkhBrToc2n10=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Create;\n\nvar _c;\n\n$RefreshReg$(_c, \"Create\");","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/create.js"],"names":["React","useState","useNavigate","Create","form","setForm","symbol","quantity","navigate","updateForm","value","prev","onSubmit","e","preventDefault","newStock","console","log","JSON","stringify","fetch","method","headers","body","catch","error","window","alert","target"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\n \nexport default function Create() {\n const [form, setForm] = useState({\n   symbol: \"\",\n   quantity: \"\",\n });\n const navigate = useNavigate();\n \n // These methods will update the state properties.\n function updateForm(value) {\n   return setForm((prev) => {\n     return { ...prev, ...value };\n   });\n }\n \n // This function will handle the submission.\n async function onSubmit(e) {\n   e.preventDefault();\n \n   // When a post request is sent to the create url, we'll add a new record to the database.\n   const newStock = { ...form };\n   console.log(newStock)\n   console.log(JSON.stringify(newStock))\n \n   await fetch(\"http://localhost:5000/stock/add\", {\n     method: \"POST\",\n     headers: {\n       \"Content-Type\": \"application/json\",\n     },\n     body: JSON.stringify(newStock),\n   })\n   .catch(error => {\n     window.alert(error);\n     return;\n   });\n \n   setForm({ symbol: \"\", quantity: \"\"});\n   navigate(\"/\");\n }\n \n // This following section will display the form that takes the input from the user.\n return (\n   <div>\n     <h3>Create New Record</h3>\n     <form onSubmit={onSubmit}>\n       <div className=\"form-group\">\n         <label htmlFor=\"symbol\">Symbol</label>\n         <input\n           type=\"text\"\n           className=\"form-control\"\n           id=\"symbol\"\n           value={form.symbol}\n           onChange={(e) => updateForm({ symbol: e.target.value })}\n         />\n       </div>\n       <div className=\"form-group\">\n         <label htmlFor=\"quantity\">Quantity</label>\n         <input\n           type=\"text\"\n           className=\"form-control\"\n           id=\"quantity\"\n           value={form.quantity}\n           onChange={(e) => updateForm({ quantity: e.target.value })}\n         />\n       </div>\n       <div className=\"form-group\">\n         <input\n           type=\"submit\"\n           value=\"Create person\"\n           className=\"btn btn-primary\"\n         />\n       </div>\n     </form>\n   </div>\n );\n}"]},"metadata":{},"sourceType":"module"}