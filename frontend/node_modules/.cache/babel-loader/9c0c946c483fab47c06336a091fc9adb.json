{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/BuyAndSellForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useLayoutEffect, useState } from \"react\";\nimport { getStockIndex, getThisUserJSON } from \"../helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BuyAndSellForm(props) {\n  _s();\n\n  const [quantity, setQuantity] = useState(100);\n  const [cost, setCost] = useState(0);\n  const [stockIsOwned, setStockIsOwned] = useState(false);\n  const [tradeInProgress, setTradeInProgress] = useState(false);\n  useLayoutEffect(() => {\n    var _ref;\n\n    // checks if the stock searched is owned by the user and displays a sell button if necessary\n    getThisUserJSON(props.token).then(json => {\n      let i = getStockIndex(json, props.stockJSON);\n      i === -1 ? setStockIsOwned(false) : setStockIsOwned(true);\n    });\n    setCost((_ref = quantity * props.stockJSON.latestPrice) !== null && _ref !== void 0 ? _ref : \"0\");\n  }, [props.stockJSON]);\n\n  const onChange = e => {\n    var _ref2;\n\n    setQuantity(parseInt(e.target.value));\n    setCost((_ref2 = parseInt(e.target.value) * props.stockJSON.latestPrice) !== null && _ref2 !== void 0 ? _ref2 : 0);\n  };\n\n  async function onBuy(e) {\n    const handleTradeProps = {\n      cost: cost,\n      quantity: quantity,\n      stockJSON: props.stockJSON\n    };\n    setTradeInProgress(true);\n    props.handleBuy(handleTradeProps).then(async () => {\n      getThisUserJSON(props.token).then(json => {\n        let i = getStockIndex(json, props.stockJSON);\n        i === -1 ? setStockIsOwned(false) : setStockIsOwned(true);\n        setTradeInProgress(false);\n      });\n    });\n  }\n\n  async function onSell(e) {\n    const handleTradeProps = {\n      cost: cost,\n      quantity: quantity,\n      stockJSON: props.stockJSON\n    };\n    setTradeInProgress(true);\n    props.handleSell(handleTradeProps).then(async () => {\n      getThisUserJSON(props.token).then(json => {\n        let i = getStockIndex(json, props.stockJSON);\n        i === -1 ? setStockIsOwned(false) : setStockIsOwned(true);\n        setTradeInProgress(false);\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"BuyForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"quantity\",\n        children: \"Quantity: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"quantity\",\n        defaultValue: \"100\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        disabled: !tradeInProgress && quantity ? false : true,\n        name: \"buyButton\",\n        value: \"Buy\",\n        onClick: e => onBuy(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        hidden: !stockIsOwned,\n        disabled: stockIsOwned && !tradeInProgress && quantity ? false : true,\n        value: \"Sell\",\n        onClick: e => onSell(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Cost / Revenue: \", cost.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BuyAndSellForm, \"l1CGiYhElTzIzbllasn46eQfolg=\");\n\n_c = BuyAndSellForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BuyAndSellForm\");","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/BuyAndSellForm.tsx"],"names":["React","useLayoutEffect","useState","getStockIndex","getThisUserJSON","BuyAndSellForm","props","quantity","setQuantity","cost","setCost","stockIsOwned","setStockIsOwned","tradeInProgress","setTradeInProgress","token","then","json","i","stockJSON","latestPrice","onChange","e","parseInt","target","value","onBuy","handleTradeProps","handleBuy","onSell","handleSell","toFixed"],"mappings":"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","sourcesContent":["import React, { useLayoutEffect, useState } from \"react\";\nimport { getStockIndex, getThisUserJSON } from \"../helpers\";\nimport { handleTradeProps, IRootObject } from \"../interfaces\";\n\ninterface BuyAndSellFormProps {\n  token: string;\n  stockJSON: IRootObject;\n  handleBuy: (props: handleTradeProps) => Promise<void>;\n  handleSell: (props: handleTradeProps) => Promise<void>;\n}\n\nexport default function BuyAndSellForm(props: BuyAndSellFormProps) {\n  const [quantity, setQuantity] = useState(100);\n\n  const [cost, setCost] = useState(0);\n  const [stockIsOwned, setStockIsOwned] = useState(false);\n  const [tradeInProgress, setTradeInProgress] = useState(false);\n\n  useLayoutEffect(() => {\n    // checks if the stock searched is owned by the user and displays a sell button if necessary\n    getThisUserJSON(props.token).then((json) => {\n      let i = getStockIndex(json, props.stockJSON);\n      i === -1 ? setStockIsOwned(false) : setStockIsOwned(true);\n    });\n    setCost(quantity * props.stockJSON.latestPrice ?? \"0\");\n  }, [props.stockJSON]);\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setQuantity(parseInt(e.target.value));\n    setCost(parseInt(e.target.value) * props.stockJSON.latestPrice ?? 0);\n  };\n\n  async function onBuy(e: React.MouseEvent<HTMLInputElement, MouseEvent>) {\n    const handleTradeProps = {\n      cost: cost,\n      quantity: quantity,\n      stockJSON: props.stockJSON,\n    };\n    setTradeInProgress(true);\n    props.handleBuy(handleTradeProps).then(async () => {\n      getThisUserJSON(props.token).then((json) => {\n        let i = getStockIndex(json, props.stockJSON);\n        i === -1 ? setStockIsOwned(false) : setStockIsOwned(true);\n        setTradeInProgress(false);\n      });\n    });\n  }\n\n  async function onSell(e: React.MouseEvent<HTMLInputElement, MouseEvent>) {\n    const handleTradeProps = {\n      cost: cost,\n      quantity: quantity,\n      stockJSON: props.stockJSON,\n    };\n    setTradeInProgress(true);\n    props.handleSell(handleTradeProps).then(async () => {\n      getThisUserJSON(props.token).then((json) => {\n        let i = getStockIndex(json, props.stockJSON);\n        i === -1 ? setStockIsOwned(false) : setStockIsOwned(true);\n        setTradeInProgress(false);\n      });\n    });\n  }\n\n  return (\n    <div id=\"BuyForm\">\n      <form>\n        <label htmlFor=\"quantity\">Quantity: </label>\n        <input\n          type=\"text\"\n          id=\"quantity\"\n          defaultValue=\"100\"\n          onChange={onChange}\n        />\n        <input\n          type=\"button\"\n          disabled={!tradeInProgress && quantity ? false : true}\n          name=\"buyButton\"\n          value=\"Buy\"\n          onClick={(e) => onBuy(e)}\n        />\n        <input\n          type=\"button\"\n          hidden={!stockIsOwned}\n          disabled={stockIsOwned && !tradeInProgress && quantity ? false : true}\n          value=\"Sell\"\n          onClick={(e) => onSell(e)}\n        />\n      </form>\n      <p>Cost / Revenue: {cost.toFixed(2)}</p>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}