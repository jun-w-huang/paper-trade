{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/stockList.tsx\",\n    _s = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StockRow(props) {\n  _s();\n\n  const [latestPrice, setLatestPrice] = useState(0);\n  console.log(\"stockrow rendering\"); // useEffect (() => {\n  //   const interval = setInterval(() => {\n  //     console.log('This will run every second!');\n  //     getStockLatestPrice(props.stock.symbol).then((latestPrice) => {\n  //           setLatestPrice(latestPrice as unknown as number);\n  //         })\n  //   }, 10000);\n  //   return () => clearInterval(interval);\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.stock.symbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: latestPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.stock.quantity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.stock.pricePurchased\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.stock.latestPrice * props.stock.quantity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StockRow, \"S4jaTMwbG7NvF+p/m6HvSdFrgSc=\");\n\n_c = StockRow;\nexport default function StockList() {\n  _s3();\n\n  var _s2 = $RefreshSig$();\n\n  const [stocks, setStocks] = useState([]); // This method fetches the stocks from the database.\n\n  useEffect(() => {\n    async function getStocks() {\n      const response = await fetch(`http://localhost:5000/stocks/`);\n\n      if (!response.ok) {\n        const message = `An error occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const stocks = await response.json();\n      setStocks(stocks);\n    }\n\n    console.log(`stocks is ${stocks}`);\n    getStocks();\n    return;\n  }); // This method will delete a record\n  //  async function deleteStock(id: any) {\n  //    await fetch(`http://localhost:5000/${id}`, {\n  //      method: \"DELETE\"\n  //    });\n  //    const newStocks = stocks.filter((el) => el._id !== id);\n  //    setStocks(newStocks);\n  //  }\n  // This method will map out the records on the table\n\n  const StocksToTable = stockList => {\n    _s2();\n\n    const [stocks, setStocks] = useState(stockList);\n    console.log(\"stocks to table rendering\");\n    console.log(`length of stock list is ${stockList.length}`);\n    return stocks.map(stock => {\n      /*#__PURE__*/\n      _jsxDEV(\"p\", {\n        children: \"hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 6\n      }, this); //  <StockRow\n      //    stock={stock}\n      //    //deleteStock={() => deleteStock(stock._id)}\n      //    key={stock._id}\n      //  />\n\n    });\n  }; // This following section will display the table with the records of individuals.\n\n\n  _s2(StocksToTable, \"s8NZU6KOIMDOqRaTeD4A6wvZaVQ=\");\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Stock List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Symbol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Latest Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price Purchased\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Net Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: StocksToTable(stocks)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 4\n  }, this);\n}\n\n_s3(StockList, \"ckkB5iKANHozGm/BUdCimNAdz7k=\");\n\n_c2 = StockList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StockRow\");\n$RefreshReg$(_c2, \"StockList\");","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/stockList.tsx"],"names":["React","useEffect","useState","StockRow","props","latestPrice","setLatestPrice","console","log","stock","symbol","quantity","pricePurchased","StockList","stocks","setStocks","getStocks","response","fetch","ok","message","statusText","window","alert","json","StocksToTable","stockList","length","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getStockLatestPrice } from \"../helpers\";\nimport { Stock } from \"../interfaces\";\n\ninterface stockProps {\n  stock: Stock\n  //deleteStock: any\n  key: number\n}\n\n\nfunction StockRow(props: stockProps) {\n\n  const[latestPrice, setLatestPrice] = useState(0);\n\n  console.log(\"stockrow rendering\")\n\n  // useEffect (() => {\n  //   const interval = setInterval(() => {\n  //     console.log('This will run every second!');\n  //     getStockLatestPrice(props.stock.symbol).then((latestPrice) => {\n  //           setLatestPrice(latestPrice as unknown as number);\n  //         })\n  //   }, 10000);\n  //   return () => clearInterval(interval);\n  // }, []);\n\n  return(\n    <tr>\n      <td>{props.stock.symbol}</td>\n      <td>{latestPrice}</td>\n      <td>{props.stock.quantity}</td>\n      <td>{props.stock.pricePurchased}</td>\n      <td>{props.stock.latestPrice*props.stock.quantity}</td>\n      {/* <td>{(props.stock.latestPrice*props.stock.quantity)-(props.stock.pricePurchased*props.stock.quantity)}</td> */}\n      {/* <td>\n        <Link className=\"btn btn-link\" to={`/edit/${props.stock._id}`}>Edit</Link> |\n        <button className=\"btn btn-link\"\n          onClick={() => {\n            props.deleteStock(props.stock._id);\n          }}\n        >\n          Delete\n        </button>\n      </td> */}\n    </tr>\n  )\n}\n \nexport default function StockList() {\n const [stocks, setStocks] = useState([]);\n \n // This method fetches the stocks from the database.\n useEffect(() => {\n   async function getStocks() {\n     const response = await fetch(`http://localhost:5000/stocks/`);\n \n     if (!response.ok) {\n       const message = `An error occured: ${response.statusText}`;\n       window.alert(message);\n       return;\n     }\n \n     const stocks = await response.json();\n     setStocks(stocks);\n   }\n   console.log(`stocks is ${stocks}`)\n   getStocks();\n \n   return;\n });\n \n // This method will delete a record\n//  async function deleteStock(id: any) {\n//    await fetch(`http://localhost:5000/${id}`, {\n//      method: \"DELETE\"\n//    });\n \n//    const newStocks = stocks.filter((el) => el._id !== id);\n//    setStocks(newStocks);\n//  }\n \n // This method will map out the records on the table\n const StocksToTable = (stockList: Stock[]) => {\n  const [stocks, setStocks] = useState(stockList);\n  console.log(\"stocks to table rendering\")\n  console.log(`length of stock list is ${stockList.length}`)\n   return stocks.map((stock) => {\n     <p>hello</p>\n      //  <StockRow\n      //    stock={stock}\n      //    //deleteStock={() => deleteStock(stock._id)}\n      //    key={stock._id}\n      //  />\n   });\n }\n \n // This following section will display the table with the records of individuals.\n return (\n   <div>\n     <h3>Stock List</h3>\n     <table>\n       <thead>\n         <tr>\n           <th>Symbol</th>\n           <th>Latest Price</th>\n           <th>Quantity</th>\n           <th>Price Purchased</th>\n           <th>Value</th>\n           <th>Net Value</th>\n         </tr>\n       </thead>\n       <tbody>{StocksToTable(stocks)}</tbody>\n     </table>\n   </div>\n );\n}"]},"metadata":{},"sourceType":"module"}