{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/landingPage/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login(props) {\n  _s();\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  function updateFormData(value) {\n    return setFormData(prev => {\n      return { ...prev,\n        ...value\n      };\n    });\n  }\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const userCredentials = formData;\n    console.log(\"username: \" + formData.username);\n    console.log(\"pw: \" + formData.password); // fetchUser\n\n    const fetchUser = async () => {\n      const response = await fetch(`http://localhost:5000/auth/`, {\n        method: \"POST\",\n        body: JSON.stringify(userCredentials),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const user = await response.json();\n      return user;\n    };\n\n    const user = await fetchUser();\n\n    if (user.token) {\n      // props.userID = user.id;\n      props.handleLogin(user.token);\n      navigate(\"/dashboard\");\n    } else {\n      console.log(\"error found\");\n      setErrorMessage(user.msg);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"background-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"auth\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          children: \"Paper Trade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        id: \"separator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"auth-form\",\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            placeholder: \"username\",\n            defaultValue: \"\",\n            onChange: e => updateFormData({\n              username: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"password\",\n            placeholder: \"password\",\n            defaultValue: \"\",\n            onChange: e => updateFormData({\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"errorDisplay\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"auth-btn\",\n          type: \"submit\",\n          value: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        id: \"separator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"alt-auth-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Don't have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          className: \"nav-link\",\n          to: \"/signup\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"3E/croi8pKxAuNSKHYIXx3Mw/rY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/landingPage/Login.tsx"],"names":["React","useState","NavLink","useNavigate","Login","props","formData","setFormData","username","password","updateFormData","value","prev","errorMessage","setErrorMessage","navigate","onSubmit","e","preventDefault","userCredentials","console","log","fetchUser","response","fetch","method","body","JSON","stringify","headers","user","json","token","handleLogin","msg","target"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { NavLink, Route, Routes, useNavigate } from \"react-router-dom\";\n\ninterface loginProps {\n  handleLogin: (token: string) => void;\n}\n\nexport default function Login(props: loginProps) {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  function updateFormData(value: any) {\n    return setFormData((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const userCredentials = formData;\n    console.log(\"username: \" + formData.username);\n    console.log(\"pw: \" + formData.password);\n\n    // fetchUser\n    const fetchUser = async () => {\n      const response = await fetch(`http://localhost:5000/auth/`, {\n        method: \"POST\",\n        body: JSON.stringify(userCredentials),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const user = await response.json();\n      return user;\n    };\n\n    const user = await fetchUser();\n\n    if (user.token) {\n      // props.userID = user.id;\n      props.handleLogin(user.token);\n      navigate(\"/dashboard\");\n    } else {\n      console.log(\"error found\");\n      setErrorMessage(user.msg);\n    }\n  };\n\n  return (\n    <div id=\"background-container\">\n      <div id=\"auth\">\n        <div id=\"title\">\n          <header>Paper Trade</header>\n        </div>\n        <hr id=\"separator\"></hr>\n        <form id=\"auth-form\" onSubmit={onSubmit}>\n          <label htmlFor=\"username\">Username: </label>\n          <div>\n            <input\n              type=\"text\"\n              id=\"username\"\n              placeholder=\"username\"\n              defaultValue=\"\"\n              onChange={(e) => updateFormData({ username: e.target.value })}\n            />\n          </div>\n          <label htmlFor=\"password\">Password: </label>\n          <div>\n            <input\n              type=\"text\"\n              id=\"password\"\n              placeholder=\"password\"\n              defaultValue=\"\"\n              onChange={(e) => updateFormData({ password: e.target.value })}\n            />\n          </div>\n          <div id=\"errorDisplay\">{errorMessage}</div>\n          <input className=\"auth-btn\" type=\"submit\" value=\"Login\" />\n        </form>\n        <hr id=\"separator\"></hr>\n        <div id=\"alt-auth-container\">\n          <b>Don't have an account?</b>\n          <NavLink className=\"nav-link\" to=\"/signup\">\n            Sign Up\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}