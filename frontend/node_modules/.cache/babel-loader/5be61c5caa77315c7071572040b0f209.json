{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/auth/SignUp.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { NavLink, useNavigate } from \"react-router-dom\";\nimport \"../styles/Auth.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    const newUser = formData; // attempt to register new user in database\n\n    fetch(`http://localhost:5000/users/add`, {\n      method: \"POST\",\n      body: JSON.stringify(newUser),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(async response => {\n      var _response$headers$get;\n\n      const isJson = (_response$headers$get = response.headers.get(\"content-type\")) === null || _response$headers$get === void 0 ? void 0 : _response$headers$get.includes(\"application/json\"); // checks if the response is of JSON type and parses it accordingly.\n\n      const data = isJson && (await response.json()); // check for erroneous response\n\n      if (!response.ok) {\n        // return error to catch block\n        return Promise.reject(data);\n      } // no error, continue to redirect to login page.\n\n\n      navigate(\"/login\");\n    }).catch(err => {\n      setErrorMessage(err.msg);\n    });\n  };\n\n  function updateFormData(value) {\n    return setFormData(prev => {\n      return { ...prev,\n        ...value\n      };\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"background-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"auth\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          children: \"Paper Trade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        id: \"separator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"auth-form\",\n        onSubmit: onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Create a username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"usernameInput\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            placeholder: \"username\",\n            defaultValue: \"\",\n            onChange: e => updateFormData({\n              username: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"passwordInput\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"password\",\n            placeholder: \"password\",\n            defaultValue: \"\",\n            onChange: e => updateFormData({\n              password: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"errorDisplay\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"auth-btn\",\n          type: \"submit\",\n          value: \"Register!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        id: \"separator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"alt-auth-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Already have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          className: \"nav-link\",\n          to: \"/login\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUp, \"HvbliYfVUl7JYt4pwJ6Z1Bx+iAs=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/auth/SignUp.tsx"],"names":["useState","NavLink","useNavigate","SignUp","navigate","formData","setFormData","username","password","errorMessage","setErrorMessage","onSubmit","e","preventDefault","newUser","fetch","method","body","JSON","stringify","headers","then","response","isJson","get","includes","data","json","ok","Promise","reject","catch","err","msg","updateFormData","value","prev","target"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { NavLink, Route, useNavigate } from \"react-router-dom\";\nimport \"../styles/Auth.css\";\n\nexport default function SignUp() {\n  const navigate = useNavigate();\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const newUser = formData;\n\n    // attempt to register new user in database\n    fetch(`http://localhost:5000/users/add`, {\n      method: \"POST\",\n      body: JSON.stringify(newUser),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then(async (response) => {\n        const isJson = response.headers\n          .get(\"content-type\")\n          ?.includes(\"application/json\");\n\n        // checks if the response is of JSON type and parses it accordingly.\n        const data = isJson && (await response.json());\n\n        // check for erroneous response\n        if (!response.ok) {\n          // return error to catch block\n          return Promise.reject(data);\n        }\n        // no error, continue to redirect to login page.\n        navigate(\"/login\");\n      })\n      .catch((err) => {\n        setErrorMessage(err.msg);\n      });\n  };\n\n  function updateFormData(value: any) {\n    return setFormData((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  return (\n    <div id=\"background-container\">\n      <div id=\"auth\">\n        <div id=\"title\">\n          <header>Paper Trade</header>\n        </div>\n        <hr id=\"separator\"></hr>\n        <form id=\"auth-form\" onSubmit={onSubmit}>\n          <label htmlFor=\"username\">Create a username: </label>\n          <div id=\"usernameInput\">\n            <input\n              type=\"text\"\n              id=\"username\"\n              placeholder=\"username\"\n              defaultValue=\"\"\n              onChange={(e) => updateFormData({ username: e.target.value })}\n            />\n          </div>\n          <label htmlFor=\"password\">Password: </label>\n          <div id=\"passwordInput\">\n            <input\n              type=\"text\"\n              id=\"password\"\n              placeholder=\"password\"\n              defaultValue=\"\"\n              onChange={(e) => updateFormData({ password: e.target.value })}\n            />\n          </div>\n          <div id=\"errorDisplay\">{errorMessage}</div>\n          <input className=\"auth-btn\" type=\"submit\" value=\"Register!\" />\n        </form>\n        <hr id=\"separator\"></hr>\n        <div id=\"alt-auth-container\">\n          <b>Already have an account?</b>\n          <NavLink className=\"nav-link\" to=\"/login\">\n            Login\n          </NavLink>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}