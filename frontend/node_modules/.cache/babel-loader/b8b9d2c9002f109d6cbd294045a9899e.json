{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paper-trade-tsx/src/forms/BuyAndSellForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { getStockIndex } from \"../helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultFormData = {\n  quantity: \"100\"\n};\n\nfunction BuyAndSellForm(props) {\n  _s();\n\n  console.log(\"buy and sell form re-rendering\");\n  const [formData, setFormData] = useState(defaultFormData);\n  const {\n    quantity\n  } = formData;\n  const [cost, setCost] = useState(0);\n  const [buyButtonVisibility, setBuyButtonVisibility] = useState(\"hidden\");\n  useEffect(() => {\n    console.log(\"use effect triggered\");\n\n    if (getStockIndex(props.portfolio, props.stockJSON) !== -1) {\n      setBuyButtonVisibility(\"submit\");\n    } else {\n      setBuyButtonVisibility(\"hidden\");\n    }\n\n    setCost(parseInt(quantity) * props.stockJSON.latestPrice);\n  });\n\n  const onChange = e => {\n    setFormData(prevState => ({ ...prevState,\n      [e.target.id]: e.target.value\n    }));\n    setCost(parseInt(e.target.value) * props.stockJSON.latestPrice);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); // console.log(e.submitter.name)\n    //add stock to the portfolio\n    //subtract cash from the portfolio\n\n    props.handleBuy(cost, parseInt(quantity), props.stockJSON);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"BuyForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"quantity\",\n        children: \"Quantity: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"quantity\",\n        defaultValue: \"100\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        name: \"buyButton\",\n        value: \"Buy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: buyButtonVisibility,\n        name: \"sellButton\",\n        value: \"Sell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Cost / Revenue: \", cost.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BuyAndSellForm, \"0n4f8glyOWLWarYvoClMsD8occg=\");\n\n_c = BuyAndSellForm;\nexport default BuyAndSellForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BuyAndSellForm\");","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paper-trade-tsx/src/forms/BuyAndSellForm.tsx"],"names":["React","useEffect","useState","getStockIndex","defaultFormData","quantity","BuyAndSellForm","props","console","log","formData","setFormData","cost","setCost","buyButtonVisibility","setBuyButtonVisibility","portfolio","stockJSON","parseInt","latestPrice","onChange","e","prevState","target","id","value","onSubmit","preventDefault","handleBuy","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,IAA8BC,SAA9B,EAAyCC,QAAzC,QAAyD,OAAzD;AACA,SAASC,aAAT,QAA8B,YAA9B;;AASA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,QAAQ,EAAE;AADU,CAAxB;;AAIA,SAASC,cAAT,CAAwBC,KAAxB,EAAkE;AAAA;;AAC9DC,EAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAACE,eAAD,CAAxC;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAeK,QAArB;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACY,mBAAD,EAAsBC,sBAAtB,IAAgDb,QAAQ,CAAC,QAAD,CAA9D;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AACA,QAAIN,aAAa,CAACI,KAAK,CAACS,SAAP,EAAkBT,KAAK,CAACU,SAAxB,CAAb,KAAoD,CAAC,CAAzD,EAA4D;AACxDF,MAAAA,sBAAsB,CAAC,QAAD,CAAtB;AACH,KAFD,MAEO;AACHA,MAAAA,sBAAsB,CAAC,QAAD,CAAtB;AACH;;AACDF,IAAAA,OAAO,CAACK,QAAQ,CAACb,QAAD,CAAR,GAAmBE,KAAK,CAACU,SAAN,CAAgBE,WAApC,CAAP;AACH,GARQ,CAAT;;AAUA,QAAMC,QAAQ,GAAIC,CAAD,IAA4C;AACzDV,IAAAA,WAAW,CAAEW,SAAD,KAAgB,EAC5B,GAAGA,SADyB;AAE5B,OAACD,CAAC,CAACE,MAAF,CAASC,EAAV,GAAeH,CAAC,CAACE,MAAF,CAASE;AAFI,KAAhB,CAAD,CAAX;AAIAZ,IAAAA,OAAO,CAACK,QAAQ,CAACG,CAAC,CAACE,MAAF,CAASE,KAAV,CAAR,GAAyBlB,KAAK,CAACU,SAAN,CAAgBE,WAA1C,CAAP;AACH,GAND;;AAQA,QAAMO,QAAQ,GAAIL,CAAD,IAAyC;AACtDA,IAAAA,CAAC,CAACM,cAAF,GADsD,CAEtD;AACA;AACA;;AACApB,IAAAA,KAAK,CAACqB,SAAN,CAAgBhB,IAAhB,EAAsBM,QAAQ,CAACb,QAAD,CAA9B,EAA0CE,KAAK,CAACU,SAAhD;AAEH,GAPD;;AASA,sBACI;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAES,QAAhB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,UAAtB;AAAiC,QAAA,YAAY,EAAC,KAA9C;AAAoD,QAAA,QAAQ,EAAEN;AAA9D;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,WAA1B;AAAsC,QAAA,KAAK,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAO,QAAA,IAAI,EAAEN,mBAAb;AAAkC,QAAA,IAAI,EAAC,YAAvC;AAAoD,QAAA,KAAK,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAA,qCAAoBF,IAAI,CAACiB,OAAL,CAAa,CAAb,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GAhDQvB,c;;KAAAA,c;AAoDT,eAAeA,cAAf","sourcesContent":["import React, { ReactElement, useEffect, useState } from \"react\";\nimport { getStockIndex } from \"../helpers\";\nimport { IRootObject, Portfolio } from \"../interfaces\";\n\ninterface BuyAndSellFormProps {\n    stockJSON : IRootObject\n    portfolio: Portfolio\n    handleBuy: (cost: number, quantity: number, stockJSON: IRootObject) => void\n}\n\nconst defaultFormData = {\n    quantity: \"100\",\n  };\n\nfunction BuyAndSellForm(props: BuyAndSellFormProps): ReactElement {\n    console.log(\"buy and sell form re-rendering\")\n\n    const [formData, setFormData] = useState(defaultFormData);\n\n    const { quantity } = formData\n    const [cost, setCost] = useState(0);\n    const [buyButtonVisibility, setBuyButtonVisibility] = useState(\"hidden\")\n\n\n    useEffect(() => {\n        console.log(\"use effect triggered\")\n        if (getStockIndex(props.portfolio, props.stockJSON) !== -1) {\n            setBuyButtonVisibility(\"submit\")\n        } else {\n            setBuyButtonVisibility(\"hidden\")\n        }\n        setCost(parseInt(quantity)*props.stockJSON.latestPrice)\n    });\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setFormData((prevState) => ({\n        ...prevState,\n        [e.target.id]: e.target.value,\n        }));\n        setCost(parseInt(e.target.value)*props.stockJSON.latestPrice)\n    };\n\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault()\n        // console.log(e.submitter.name)\n        //add stock to the portfolio\n        //subtract cash from the portfolio\n        props.handleBuy(cost, parseInt(quantity), props.stockJSON)\n\n    }\n    \n    return(\n        <div id=\"BuyForm\">\n            <form onSubmit={onSubmit}>\n                <label htmlFor=\"quantity\">Quantity: </label>\n                <input type=\"text\" id=\"quantity\" defaultValue=\"100\" onChange={onChange}/>\n                <input type=\"submit\" name=\"buyButton\" value=\"Buy\"/>\n                <input type={buyButtonVisibility} name=\"sellButton\" value=\"Sell\"/>\n            </form>\n            <p>Cost / Revenue: {cost.toFixed(2)}</p>\n        </div>\n    )\n}\n\n\n\nexport default BuyAndSellForm;"]},"metadata":{},"sourceType":"module"}