{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/OwnedStocksList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { getStockLatestPrice } from \"./helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StockRow(props) {\n  _s();\n\n  const [latestPrice, setLatestPrice] = useState(0); // updates latest price each time new stock is bought or sold\n\n  useEffect(() => {\n    getStockLatestPrice(props.stock.symbol).then(newLatestPrice => {\n      setLatestPrice(newLatestPrice);\n    });\n  }, [props.stock.latestPrice]);\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.stock.symbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: latestPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.stock.quantity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.stock.pricePurchased\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: +(latestPrice * props.stock.quantity).toFixed(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: +(latestPrice * props.stock.quantity - props.stock.pricePurchased * props.stock.quantity).toFixed(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StockRow, \"yrnzc4WHug6qEDfu6iy9kMtBdEw=\");\n\n_c = StockRow;\nexport default function OwnedStockList(props) {\n  // This method will map out the stocks on the table\n  const StocksToTable = stockList => {\n    return stockList.map(stock => /*#__PURE__*/_jsxDEV(StockRow, {\n      stock: stock\n    }, stock.symbol, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this));\n  }; // This following section will display the table with the users stocks\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"component\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Stocks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Symbol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Latest Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price Purchased\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Net Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: StocksToTable(props.stocks)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_c2 = OwnedStockList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StockRow\");\n$RefreshReg$(_c2, \"OwnedStockList\");","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/OwnedStocksList.tsx"],"names":["useEffect","useState","getStockLatestPrice","StockRow","props","latestPrice","setLatestPrice","stock","symbol","then","newLatestPrice","quantity","pricePurchased","toFixed","OwnedStockList","StocksToTable","stockList","map","stocks"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,mBAAT,QAAoC,WAApC;;;AAOA,SAASC,QAAT,CAAkBC,KAAlB,EAAwC;AAAA;;AACtC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,CAAD,CAA9C,CADsC,CAGtC;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,mBAAmB,CAACE,KAAK,CAACG,KAAN,CAAYC,MAAb,CAAnB,CAAwCC,IAAxC,CAA8CC,cAAD,IAAoB;AAC/DJ,MAAAA,cAAc,CAACI,cAAD,CAAd;AACD,KAFD;AAGD,GAJQ,EAIN,CAACN,KAAK,CAACG,KAAN,CAAYF,WAAb,CAJM,CAAT;AAMA,sBACE;AAAA,4BACE;AAAA,gBAAKD,KAAK,CAACG,KAAN,CAAYC;AAAjB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKH;AAAL;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,gBAAKD,KAAK,CAACG,KAAN,CAAYI;AAAjB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,gBAAKP,KAAK,CAACG,KAAN,CAAYK;AAAjB;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA,gBAAK,CAAC,CAACP,WAAW,GAAGD,KAAK,CAACG,KAAN,CAAYI,QAA3B,EAAqCE,OAArC,CAA6C,CAA7C;AAAN;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,gBAEI,CAAC,CACCR,WAAW,GAAGD,KAAK,CAACG,KAAN,CAAYI,QAA1B,GACAP,KAAK,CAACG,KAAN,CAAYK,cAAZ,GAA6BR,KAAK,CAACG,KAAN,CAAYI,QAF1C,EAGCE,OAHD,CAGS,CAHT;AAFL;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA3BQV,Q;;KAAAA,Q;AAgCT,eAAe,SAASW,cAAT,CAAwBV,KAAxB,EAA+C;AAC5D;AACA,QAAMW,aAAa,GAAIC,SAAD,IAAwB;AAC5C,WAAOA,SAAS,CAACC,GAAV,CAAeV,KAAD,iBACnB,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEA;AAAjB,OAA6BA,KAAK,CAACC,MAAnC;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAGD,GAJD,CAF4D,CAQ5D;;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE;AAAA,kBAAQO,aAAa,CAACX,KAAK,CAACc,MAAP;AAArB;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;MA3BuBJ,c","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getStockLatestPrice } from \"./helpers\";\nimport { Stock } from \"./interfaces\";\n\ninterface stockRowProps {\n  stock: Stock;\n}\n\nfunction StockRow(props: stockRowProps) {\n  const [latestPrice, setLatestPrice] = useState(0);\n\n  // updates latest price each time new stock is bought or sold\n  useEffect(() => {\n    getStockLatestPrice(props.stock.symbol).then((newLatestPrice) => {\n      setLatestPrice(newLatestPrice);\n    });\n  }, [props.stock.latestPrice]);\n\n  return (\n    <tr>\n      <td>{props.stock.symbol}</td>\n      <td>{latestPrice}</td>\n      <td>{props.stock.quantity}</td>\n      <td>{props.stock.pricePurchased}</td>\n      <td>{+(latestPrice * props.stock.quantity).toFixed(2)}</td>\n      <td>\n        {\n          +(\n            latestPrice * props.stock.quantity -\n            props.stock.pricePurchased * props.stock.quantity\n          ).toFixed(2)\n        }\n      </td>\n    </tr>\n  );\n}\n\ninterface stockListProps {\n  stocks: Stock[];\n}\nexport default function OwnedStockList(props: stockListProps) {\n  // This method will map out the stocks on the table\n  const StocksToTable = (stockList: Stock[]) => {\n    return stockList.map((stock) => (\n      <StockRow stock={stock} key={stock.symbol} />\n    ));\n  };\n\n  // This following section will display the table with the users stocks\n  return (\n    <div className=\"component\">\n      <h3>Your Stocks</h3>\n      <table>\n        <thead>\n          <tr>\n            <th>Symbol</th>\n            <th>Latest Price</th>\n            <th>Quantity</th>\n            <th>Price Purchased</th>\n            <th>Value</th>\n            <th>Net Value</th>\n          </tr>\n        </thead>\n        <tbody>{StocksToTable(props.stocks)}</tbody>\n      </table>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}