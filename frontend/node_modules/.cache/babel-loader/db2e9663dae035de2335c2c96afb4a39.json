{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paper-trade-tsx/src/StockResultDisplay.tsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StockResultDisplay(props) {\n  var _stringToObject;\n\n  console.log(`in the display comp it is ${props.JSON}`);\n  console.log(`type is ${typeof props.JSON}`);\n\n  function stringToObject(props) {\n    if (typeof props.JSON != 'string') {\n      console.log(\"it isnt a string\");\n      console.log(props.JSON.latestPrice);\n      const response = props.JSON;\n      return response;\n    }\n  }\n\n  const obj = (_stringToObject = stringToObject(props)) !== null && _stringToObject !== void 0 ? _stringToObject : {\n    latestPrice: null\n  };\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: obj.latestPrice\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this); // if (props.ticker && props.price != \"\") {\n  //     console.log(\"im returning!\")\n  //     return(\n  //         <table>\n  //             <thead>\n  //                 <td>{props.ticker}</td>\n  //             </thead>\n  //             <tbody>\n  //                 <tr>\n  //                     <td>{props.price}</td>\n  //                 </tr>\n  //             </tbody>\n  //         </table>\n  //     )\n  // } else {\n  //     return <div></div>\n  // }\n}\n\n_c = StockResultDisplay;\nexport default StockResultDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"StockResultDisplay\");","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paper-trade-tsx/src/StockResultDisplay.tsx"],"names":["React","StockResultDisplay","props","console","log","JSON","stringToObject","latestPrice","response","obj"],"mappings":";AAAA,OAAOA,KAAP,MAAoC,OAApC;;;AAUA,SAASC,kBAAT,CAA4BC,KAA5B,EAA2F;AAAA;;AACvFC,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BF,KAAK,CAACG,IAAK,EAApD;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAa,WAAU,OAAOF,KAAK,CAACG,IAAK,EAAzC;;AAEA,WAASC,cAAT,CAAwBJ,KAAxB,EAAiD;AAC7C,QAAI,OAAOA,KAAK,CAACG,IAAb,IAAqB,QAAzB,EAAmC;AAC/BF,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,IAAN,CAAWE,WAAvB;AACA,YAAMC,QAAQ,GAAGN,KAAK,CAACG,IAAvB;AACA,aAAOG,QAAP;AACH;AACJ;;AACD,QAAMC,GAAa,sBAAGH,cAAc,CAACJ,KAAD,CAAjB,6DAA4B;AAACK,IAAAA,WAAW,EAAE;AAAd,GAA/C;AAGA,sBACI;AAAA,cACKE,GAAG,CAACF;AADT;AAAA;AAAA;AAAA;AAAA,UADJ,CAfuF,CAoBvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACH;;KAtCQN,kB;AAyCT,eAAeA,kBAAf","sourcesContent":["import React, { ReactElement } from \"react\";\n\ninterface StockResultProps {\n    JSON: any\n}\n\ninterface JSONData {\n    latestPrice: number | null\n}\n\nfunction StockResultDisplay(props: React.PropsWithChildren<StockResultProps>):ReactElement {\n    console.log(`in the display comp it is ${props.JSON}`)\n    console.log(`type is ${typeof props.JSON}`)\n\n    function stringToObject(props: StockResultProps) {\n        if (typeof props.JSON != 'string') {\n            console.log(\"it isnt a string\")\n            console.log(props.JSON.latestPrice)\n            const response = props.JSON as JSONData\n            return response\n        }\n    }\n    const obj: JSONData = stringToObject(props) ?? {latestPrice: null}\n    \n    \n    return (\n        <p>\n            {obj.latestPrice}\n        </p>\n    )\n    // if (props.ticker && props.price != \"\") {\n    //     console.log(\"im returning!\")\n    //     return(\n    //         <table>\n    //             <thead>\n    //                 <td>{props.ticker}</td>\n    //             </thead>\n    //             <tbody>\n    //                 <tr>\n    //                     <td>{props.price}</td>\n    //                 </tr>\n    //             </tbody>\n    //         </table>\n            \n    //     )\n    // } else {\n    //     return <div></div>\n    // }\n}\n\n\nexport default StockResultDisplay;"]},"metadata":{},"sourceType":"module"}