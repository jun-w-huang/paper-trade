{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/forms/BuyAndSellForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BuyAndSellForm(props) {\n  _s();\n\n  console.log(props.userJSON._id);\n  const [formData, setFormData] = useState({\n    \"_id\": {\n      \"$oid\": props.userJSON._id\n    },\n    \"username\": props.userJSON.username,\n    \"password\": props.userJSON.password,\n    \"portfolio\": props.userJSON.portfolio,\n    \"stocks\": props.userJSON.stocks // symbol: props.stockJSON.symbol,\n    // quantity: \"100\",\n    // pricePurchased: props.stockJSON.latestPrice,\n\n  });\n  const [quantity, setQuantity] = useState(\"100\");\n  const [cost, setCost] = useState(0); // const [sellButtonVisibility, setSellButtonVisibility] = useState(false)\n\n  const params = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchData() {\n      var _params$id;\n\n      const id = params === null || params === void 0 ? void 0 : (_params$id = params.id) === null || _params$id === void 0 ? void 0 : _params$id.toString();\n      const response = await fetch(`http://localhost:5000/stocks/${props.userJSON._id.$oid}`);\n      console.log(`http://localhost:5000/stocks/${props.userJSON._id.$oid}`);\n\n      if (!response.ok) {\n        const message = `An error has occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const user = await response.json();\n\n      if (!user) {\n        window.alert(`user with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n\n      console.log(user);\n      setFormData(user);\n    }\n\n    fetchData();\n    return;\n  }, [params.id, navigate]);\n  useEffect(() => {\n    console.log(\"use effect triggered\");\n    console.log(formData);\n    setCost(parseInt(quantity) * props.stockJSON.latestPrice);\n  });\n\n  const onChange = e => {\n    setFormData(prevState => ({ ...prevState,\n      [e.target.id]: e.target.value\n    }));\n    setCost(parseInt(e.target.value) * props.stockJSON.latestPrice);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log(\"submitting buy form\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"BuyForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"quantity\",\n        children: \"Quantity: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"quantity\",\n        defaultValue: \"100\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        name: \"buyButton\",\n        value: \"Buy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"btn btn-link\",\n        to: `/edit/${props.userJSON._id}`,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Cost / Revenue: \", cost.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BuyAndSellForm, \"W1u+/QO/pRsKQqq6puNz5aF2gNY=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = BuyAndSellForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BuyAndSellForm\");","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/forms/BuyAndSellForm.tsx"],"names":["React","useEffect","useState","useParams","useNavigate","Link","BuyAndSellForm","props","console","log","userJSON","_id","formData","setFormData","username","password","portfolio","stocks","quantity","setQuantity","cost","setCost","params","navigate","fetchData","id","toString","response","fetch","$oid","ok","message","statusText","window","alert","user","json","parseInt","stockJSON","latestPrice","onChange","e","prevState","target","value","onSubmit","preventDefault","toFixed"],"mappings":"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","sourcesContent":["import React, { ReactElement, useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport { IRootObject, Portfolio, userJSON } from \"../../interfaces\";\n\ninterface BuyAndSellFormProps {\n    userJSON: userJSON\n    stockJSON : IRootObject\n    portfolio: Portfolio\n    // handleBuy: (cost: number, quantity: number, stockJSON: IRootObject) => void\n}\n\n\nexport default function BuyAndSellForm(props: BuyAndSellFormProps){\n    console.log(props.userJSON._id)\n    const [formData, setFormData] = useState({\n        \"_id\": {\n            \"$oid\": props.userJSON._id\n          },\n          \"username\": props.userJSON.username,\n          \"password\": props.userJSON.password,\n          \"portfolio\": props.userJSON.portfolio,\n          \"stocks\": props.userJSON.stocks,\n        // symbol: props.stockJSON.symbol,\n        // quantity: \"100\",\n        // pricePurchased: props.stockJSON.latestPrice,\n    })\n\n    const [quantity, setQuantity] = useState(\"100\")\n\n    const [cost, setCost] = useState(0);\n    // const [sellButtonVisibility, setSellButtonVisibility] = useState(false)\n\n    const params = useParams();\n    const navigate = useNavigate();\n\n\n    useEffect(() => {\n        async function fetchData() {\n            const id = params?.id?.toString();\n            const response = await fetch(`http://localhost:5000/stocks/${props.userJSON._id.$oid}`);\n            console.log(`http://localhost:5000/stocks/${props.userJSON._id.$oid}`)\n            if (!response.ok) {\n                const message = `An error has occured: ${response.statusText}`;\n                window.alert(message);\n                return;\n            }\n      \n            const user = await response.json();\n            if (!user) {\n                window.alert(`user with id ${id} not found`);\n                navigate(\"/\");\n                return;\n            }\n            console.log(user)\n        \n            setFormData(user);\n        }\n      \n        fetchData();\n      \n        return;\n    }, [params.id, navigate]);\n\n\n\n\n    useEffect(() => {\n        console.log(\"use effect triggered\")\n        console.log(formData)\n        setCost(parseInt(quantity)*props.stockJSON.latestPrice)\n    });\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setFormData((prevState) => ({\n        ...prevState,\n        [e.target.id]: e.target.value,\n        }));\n        setCost(parseInt(e.target.value)*props.stockJSON.latestPrice)\n    };\n\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault()\n        console.log(\"submitting buy form\")\n    }\n\n    return(\n        <div id=\"BuyForm\">\n            <form onSubmit={onSubmit}>\n                <label htmlFor=\"quantity\">Quantity: </label>\n                <input type=\"text\" id=\"quantity\" defaultValue=\"100\" onChange={onChange}/>\n                <input type=\"submit\" name=\"buyButton\" value=\"Buy\"/>\n                {/* <input type=\"button\" hidden={sellButtonVisibility} value=\"Sell\" onClick={() => onSell()}/> */}\n                <Link className=\"btn btn-link\" to={`/edit/${props.userJSON._id}`}>Edit</Link>\n            </form>\n            <p>Cost / Revenue: {cost.toFixed(2)}</p>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}