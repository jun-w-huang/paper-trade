{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/auth/Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../../styles/login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Login(props) {\n  _s();\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  function updateFormData(value) {\n    return setFormData(prev => {\n      return { ...prev,\n        ...value\n      };\n    });\n  }\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n  const onSubmit = async e => {\n    // check is correct,,, we will skip it for now\n    e.preventDefault();\n    const userCredentials = formData;\n    console.log(\"username: \" + formData.username);\n    console.log(\"pw: \" + formData.password); // fetchUser\n\n    const fetchUser = async () => {\n      const response = await fetch(`http://localhost:5000/auth/`, {\n        method: \"POST\",\n        body: JSON.stringify(userCredentials),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const user = await response.json();\n      return user;\n    };\n\n    const user = await fetchUser();\n\n    if (user.token) {\n      // props.userID = user.id;\n      props.handleLogin(user.token);\n      navigate(\"/dashboard\");\n    } else {\n      console.log(\"error found\");\n      setErrorMessage(user.msg);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"loginContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"loginForm\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"usernameInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          defaultValue: \"\",\n          onChange: e => updateFormData({\n            username: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"passwordInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"password\",\n          defaultValue: \"\",\n          onChange: e => updateFormData({\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"errorDisplay\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"LoginHELLO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"3E/croi8pKxAuNSKHYIXx3Mw/rY=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/auth/Login.tsx"],"names":["React","useState","useNavigate","Login","props","formData","setFormData","username","password","updateFormData","value","prev","errorMessage","setErrorMessage","navigate","onSubmit","e","preventDefault","userCredentials","console","log","fetchUser","response","fetch","method","body","JSON","stringify","headers","user","json","token","handleLogin","msg","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAO,wBAAP;;AAMA,OAAO,SAASC,KAAT,CAAeC,KAAf,EAAkC;AAAA;;AACvC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC;AACvCM,IAAAA,QAAQ,EAAE,EAD6B;AAEvCC,IAAAA,QAAQ,EAAE;AAF6B,GAAD,CAAxC;;AAKA,WAASC,cAAT,CAAwBC,KAAxB,EAAoC;AAClC,WAAOJ,WAAW,CAAEK,IAAD,IAAU;AAC3B,aAAO,EAAE,GAAGA,IAAL;AAAW,WAAGD;AAAd,OAAP;AACD,KAFiB,CAAlB;AAGD;;AAED,QAAM,CAACE,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAMa,QAAQ,GAAGZ,WAAW,EAA5B;;AAEA,QAAMa,QAAQ,GAAG,MAAOC,CAAP,IAA+C;AAC9D;AACAA,IAAAA,CAAC,CAACC,cAAF;AAEA,UAAMC,eAAe,GAAGb,QAAxB;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAef,QAAQ,CAACE,QAApC;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,SAASf,QAAQ,CAACG,QAA9B,EAN8D,CAQ9D;;AACA,UAAMa,SAAS,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,6BAAF,EAAgC;AAC1DC,QAAAA,MAAM,EAAE,MADkD;AAE1DC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,eAAf,CAFoD;AAG1DU,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHiD,OAAhC,CAA5B;AAOA,YAAMC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAnB;AACA,aAAOD,IAAP;AACD,KAVD;;AAYA,UAAMA,IAAI,GAAG,MAAMR,SAAS,EAA5B;;AAEA,QAAIQ,IAAI,CAACE,KAAT,EAAgB;AACd;AACA3B,MAAAA,KAAK,CAAC4B,WAAN,CAAkBH,IAAI,CAACE,KAAvB;AACAjB,MAAAA,QAAQ,CAAC,YAAD,CAAR;AACD,KAJD,MAIO;AACLK,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAP,MAAAA,eAAe,CAACgB,IAAI,CAACI,GAAN,CAAf;AACD;AACF,GA/BD;;AAiCA,sBACE;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAA,2BACE;AAAM,MAAA,EAAE,EAAC,WAAT;AAAqB,MAAA,QAAQ,EAAElB,QAA/B;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,eAAR;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,YAAY,EAAC,EAHf;AAIE,UAAA,QAAQ,EAAGC,CAAD,IAAOP,cAAc,CAAC;AAAEF,YAAAA,QAAQ,EAAES,CAAC,CAACkB,MAAF,CAASxB;AAArB,WAAD;AAJjC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAK,QAAA,EAAE,EAAC,eAAR;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,YAAY,EAAC,EAHf;AAIE,UAAA,QAAQ,EAAGM,CAAD,IAAOP,cAAc,CAAC;AAAED,YAAAA,QAAQ,EAAEQ,CAAC,CAACkB,MAAF,CAASxB;AAArB,WAAD;AAJjC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAmBE;AAAK,QAAA,EAAE,EAAC,cAAR;AAAA,kBAAwBE;AAAxB;AAAA;AAAA;AAAA;AAAA,cAnBF,eAoBE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA3EeT,K;UAcGD,W;;;KAdHC,K","sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../../styles/login.css\";\n\ninterface loginProps {\n  handleLogin: (token: string) => void;\n}\n\nexport function Login(props: loginProps) {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  function updateFormData(value: any) {\n    return setFormData((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    // check is correct,,, we will skip it for now\n    e.preventDefault();\n\n    const userCredentials = formData;\n    console.log(\"username: \" + formData.username);\n    console.log(\"pw: \" + formData.password);\n\n    // fetchUser\n    const fetchUser = async () => {\n      const response = await fetch(`http://localhost:5000/auth/`, {\n        method: \"POST\",\n        body: JSON.stringify(userCredentials),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const user = await response.json();\n      return user;\n    };\n\n    const user = await fetchUser();\n\n    if (user.token) {\n      // props.userID = user.id;\n      props.handleLogin(user.token);\n      navigate(\"/dashboard\");\n    } else {\n      console.log(\"error found\");\n      setErrorMessage(user.msg);\n    }\n  };\n\n  return (\n    <div id=\"loginContainer\">\n      <form id=\"loginForm\" onSubmit={onSubmit}>\n        <div id=\"usernameInput\">\n          <label htmlFor=\"username\">Username: </label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            defaultValue=\"\"\n            onChange={(e) => updateFormData({ username: e.target.value })}\n          />\n        </div>\n        <div id=\"passwordInput\">\n          <label htmlFor=\"password\">Password: </label>\n          <input\n            type=\"text\"\n            id=\"password\"\n            defaultValue=\"\"\n            onChange={(e) => updateFormData({ password: e.target.value })}\n          />\n        </div>\n        <div id=\"errorDisplay\">{errorMessage}</div>\n        <input type=\"submit\" value=\"LoginHELLO\" />\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}