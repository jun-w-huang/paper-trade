{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/forms/BuyAndSellForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useLayoutEffect, useState } from \"react\";\nimport { getStockIndex, getThisUserJSON } from \"../../helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BuyAndSellForm(props) {\n  _s();\n\n  const [quantity, setQuantity] = useState(100);\n  const [cost, setCost] = useState(0);\n  const [stockIsOwned, setStockIsOwned] = useState(false); // const index = getStockIndex(props.userJSON, props.stockJSON);\n\n  const [userJSON, setUserJSON] = useState(getThisUserJSON(props.token));\n  useLayoutEffect(() => {\n    var _ref;\n\n    console.log(\"use layout effect running\"); // console.log(index);\n    // index === -1 ? setStockIsOwned(false) : setStockIsOwned(true);\n\n    setCost((_ref = quantity * props.stockJSON.latestPrice) !== null && _ref !== void 0 ? _ref : \"0\");\n  }, [props.stockJSON]);\n\n  const onChange = e => {\n    var _ref2;\n\n    console.log(\"on change\");\n    setQuantity(parseInt(e.target.value));\n    setCost((_ref2 = parseInt(e.target.value) * props.stockJSON.latestPrice) !== null && _ref2 !== void 0 ? _ref2 : 0);\n  };\n\n  async function onBuy(e) {\n    const handleBuyProps = {\n      cost: cost,\n      quantity: quantity,\n      stockJSON: props.stockJSON\n    };\n    props.handleBuy(handleBuyProps).then(async () => {\n      getThisUserJSON(props.token).then(json => {\n        let i = getStockIndex(json, props.stockJSON);\n        i === -1 ? setStockIsOwned(false) : setStockIsOwned(true);\n        console.log(\"i is:\" + i);\n        console.log(stockIsOwned);\n      });\n    });\n  } // async function onSell(e: React.MouseEvent<HTMLInputElement, MouseEvent>) {\n  //   // e.preventDefault()\n  //   console.log(\"sell button clciked\");\n  //   if (quantity > props.userJSON.stocks[index].quantity) {\n  //     window.alert(\n  //       \"You are trying to sell more stock than you own! Please lower the quantity\"\n  //     );\n  //     return;\n  //   }\n  //   const newStocks = props.userJSON.stocks.slice();\n  //   if (quantity === props.userJSON.stocks[index].quantity) {\n  //     newStocks.splice(index, 1);\n  //   } else {\n  //     newStocks[index].quantity = newStocks[index].quantity - quantity;\n  //   }\n  //   const newCash = props.userJSON.portfolio.cash + cost;\n  //   const newPortfolio = {\n  //     name: props.userJSON.portfolio.name,\n  //     cash: newCash,\n  //   };\n  //   const editedUser = {\n  //     portfolio: newPortfolio,\n  //     stocks: newStocks,\n  //   };\n  //   console.log(newStocks);\n  //   await fetch(`http://localhost:5000/update/${props.userJSON._id}`, {\n  //     method: \"POST\",\n  //     body: JSON.stringify(editedUser),\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //   });\n  //   // props.handleBuy();\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"BuyForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"quantity\",\n        children: \"Quantity: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"quantity\",\n        defaultValue: \"100\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        disabled: quantity ? false : true,\n        name: \"buyButton\",\n        value: \"Buy\",\n        onClick: e => onBuy(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        hidden: !stockIsOwned,\n        value: \"Sell\" // onClick={(e) => onSell(e)}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Cost / Revenue: \", cost.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BuyAndSellForm, \"n28Ge9qIpdeBoVwVR5tPqeBRrzE=\");\n\n_c = BuyAndSellForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BuyAndSellForm\");","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/forms/BuyAndSellForm.tsx"],"names":["React","useLayoutEffect","useState","getStockIndex","getThisUserJSON","BuyAndSellForm","props","quantity","setQuantity","cost","setCost","stockIsOwned","setStockIsOwned","userJSON","setUserJSON","token","console","log","stockJSON","latestPrice","onChange","e","parseInt","target","value","onBuy","handleBuyProps","handleBuy","then","json","i","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,eAAhB,EAAiCC,QAAjC,QAAiD,OAAjD;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA+C,eAA/C;;AAUA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAAoD;AAAA;;AACjE,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,GAAD,CAAxC;AAEA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,KAAD,CAAhD,CAJiE,CAMjE;;AAEA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAACE,eAAe,CAACE,KAAK,CAACS,KAAP,CAAhB,CAAxC;AAEAd,EAAAA,eAAe,CAAC,MAAM;AAAA;;AACpBe,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EADoB,CAEpB;AACA;;AACAP,IAAAA,OAAO,SAACH,QAAQ,GAAGD,KAAK,CAACY,SAAN,CAAgBC,WAA5B,uCAA2C,GAA3C,CAAP;AACD,GALc,EAKZ,CAACb,KAAK,CAACY,SAAP,CALY,CAAf;;AAOA,QAAME,QAAQ,GAAIC,CAAD,IAA4C;AAAA;;AAC3DL,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAT,IAAAA,WAAW,CAACc,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAT,CAAX;AACAd,IAAAA,OAAO,UAACY,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAR,GAA2BlB,KAAK,CAACY,SAAN,CAAgBC,WAA5C,yCAA2D,CAA3D,CAAP;AACD,GAJD;;AAMA,iBAAeM,KAAf,CAAqBJ,CAArB,EAAwE;AACtE,UAAMK,cAAc,GAAG;AACrBjB,MAAAA,IAAI,EAAEA,IADe;AAErBF,MAAAA,QAAQ,EAAEA,QAFW;AAGrBW,MAAAA,SAAS,EAAEZ,KAAK,CAACY;AAHI,KAAvB;AAKAZ,IAAAA,KAAK,CAACqB,SAAN,CAAgBD,cAAhB,EAAgCE,IAAhC,CAAqC,YAAY;AAC/CxB,MAAAA,eAAe,CAACE,KAAK,CAACS,KAAP,CAAf,CAA6Ba,IAA7B,CAAmCC,IAAD,IAAU;AAC1C,YAAIC,CAAC,GAAG3B,aAAa,CAAC0B,IAAD,EAAOvB,KAAK,CAACY,SAAb,CAArB;AACAY,QAAAA,CAAC,KAAK,CAAC,CAAP,GAAWlB,eAAe,CAAC,KAAD,CAA1B,GAAoCA,eAAe,CAAC,IAAD,CAAnD;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAUa,CAAtB;AACAd,QAAAA,OAAO,CAACC,GAAR,CAAYN,YAAZ;AACD,OALD;AAMD,KAPD;AAQD,GArCgE,CAuCjE;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA,4BACE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,EAAE,EAAC,UAFL;AAGE,QAAA,YAAY,EAAC,KAHf;AAIE,QAAA,QAAQ,EAAES;AAJZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,QAAQ,EAAEb,QAAQ,GAAG,KAAH,GAAW,IAF/B;AAGE,QAAA,IAAI,EAAC,WAHP;AAIE,QAAA,KAAK,EAAC,KAJR;AAKE,QAAA,OAAO,EAAGc,CAAD,IAAOI,KAAK,CAACJ,CAAD;AALvB;AAAA;AAAA;AAAA;AAAA,cARF,eAeE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,MAAM,EAAE,CAACV,YAFX;AAGE,QAAA,KAAK,EAAC,MAHR,CAIE;;AAJF;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAuBE;AAAA,qCAAoBF,IAAI,CAACsB,OAAL,CAAa,CAAb,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA5GuB1B,c;;KAAAA,c","sourcesContent":["import React, { useLayoutEffect, useState } from \"react\";\nimport { getStockIndex, getThisUserJSON } from \"../../helpers\";\nimport { handleBuyProps, IRootObject, userJSON } from \"../../interfaces\";\n\ninterface BuyAndSellFormProps {\n  userJSON: userJSON;\n  token: string;\n  stockJSON: IRootObject;\n  handleBuy: (props: handleBuyProps) => Promise<void>;\n}\n\nexport default function BuyAndSellForm(props: BuyAndSellFormProps) {\n  const [quantity, setQuantity] = useState(100);\n\n  const [cost, setCost] = useState(0);\n  const [stockIsOwned, setStockIsOwned] = useState(false);\n\n  // const index = getStockIndex(props.userJSON, props.stockJSON);\n\n  const [userJSON, setUserJSON] = useState(getThisUserJSON(props.token));\n\n  useLayoutEffect(() => {\n    console.log(\"use layout effect running\");\n    // console.log(index);\n    // index === -1 ? setStockIsOwned(false) : setStockIsOwned(true);\n    setCost(quantity * props.stockJSON.latestPrice ?? \"0\");\n  }, [props.stockJSON]);\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(\"on change\");\n    setQuantity(parseInt(e.target.value));\n    setCost(parseInt(e.target.value) * props.stockJSON.latestPrice ?? 0);\n  };\n\n  async function onBuy(e: React.MouseEvent<HTMLInputElement, MouseEvent>) {\n    const handleBuyProps = {\n      cost: cost,\n      quantity: quantity,\n      stockJSON: props.stockJSON,\n    };\n    props.handleBuy(handleBuyProps).then(async () => {\n      getThisUserJSON(props.token).then((json) => {\n        let i = getStockIndex(json, props.stockJSON);\n        i === -1 ? setStockIsOwned(false) : setStockIsOwned(true);\n        console.log(\"i is:\" + i);\n        console.log(stockIsOwned);\n      });\n    });\n  }\n\n  // async function onSell(e: React.MouseEvent<HTMLInputElement, MouseEvent>) {\n  //   // e.preventDefault()\n  //   console.log(\"sell button clciked\");\n\n  //   if (quantity > props.userJSON.stocks[index].quantity) {\n  //     window.alert(\n  //       \"You are trying to sell more stock than you own! Please lower the quantity\"\n  //     );\n  //     return;\n  //   }\n\n  //   const newStocks = props.userJSON.stocks.slice();\n\n  //   if (quantity === props.userJSON.stocks[index].quantity) {\n  //     newStocks.splice(index, 1);\n  //   } else {\n  //     newStocks[index].quantity = newStocks[index].quantity - quantity;\n  //   }\n\n  //   const newCash = props.userJSON.portfolio.cash + cost;\n  //   const newPortfolio = {\n  //     name: props.userJSON.portfolio.name,\n  //     cash: newCash,\n  //   };\n\n  //   const editedUser = {\n  //     portfolio: newPortfolio,\n  //     stocks: newStocks,\n  //   };\n\n  //   console.log(newStocks);\n\n  //   await fetch(`http://localhost:5000/update/${props.userJSON._id}`, {\n  //     method: \"POST\",\n  //     body: JSON.stringify(editedUser),\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //     },\n  //   });\n  //   // props.handleBuy();\n  // }\n\n  return (\n    <div id=\"BuyForm\">\n      <form>\n        <label htmlFor=\"quantity\">Quantity: </label>\n        <input\n          type=\"text\"\n          id=\"quantity\"\n          defaultValue=\"100\"\n          onChange={onChange}\n        />\n        <input\n          type=\"button\"\n          disabled={quantity ? false : true}\n          name=\"buyButton\"\n          value=\"Buy\"\n          onClick={(e) => onBuy(e)}\n        />\n        <input\n          type=\"button\"\n          hidden={!stockIsOwned}\n          value=\"Sell\"\n          // onClick={(e) => onSell(e)}\n        />\n      </form>\n      <p>Cost / Revenue: {cost.toFixed(2)}</p>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}