{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/auth/SignUp.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../../styles/SignUp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault(); //.. handle submit\n    // .. check that this username doesn't exist\n    //.. send to database\n    // redirect to main page.\n\n    const newUser = formData;\n    console.log(newUser);\n    fetch(`http://localhost:5000/users/add`, {\n      method: \"POST\",\n      body: JSON.stringify(newUser),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      if (!response.ok) {\n        console.log(response.text);\n      }\n    }).catch(err => {\n      console.log(\"im in here\");\n      console.error(err);\n    }); // navigate(\"/login\");\n  };\n\n  function updateFormData(value) {\n    return setFormData(prev => {\n      return { ...prev,\n        ...value\n      };\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"signUpContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"signUpForm\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"usernameInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Create a username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          defaultValue: \"\",\n          onChange: e => updateFormData({\n            username: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"passwordInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"password\",\n          defaultValue: \"\",\n          onChange: e => updateFormData({\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Register!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignUp, \"cmbivj++wk2pO5kWi79KTyu4jrg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/auth/SignUp.tsx"],"names":["useState","useNavigate","SignUp","navigate","formData","setFormData","username","password","onSubmit","e","preventDefault","newUser","console","log","fetch","method","body","JSON","stringify","headers","then","response","ok","text","catch","err","error","updateFormData","value","prev","target"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAO,yBAAP;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AAEA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC;AACvCM,IAAAA,QAAQ,EAAE,EAD6B;AAEvCC,IAAAA,QAAQ,EAAE;AAF6B,GAAD,CAAxC;;AAKA,QAAMC,QAAQ,GAAG,MAAOC,CAAP,IAA+C;AAC9DA,IAAAA,CAAC,CAACC,cAAF,GAD8D,CAE9D;AACA;AACA;AACA;;AAEA,UAAMC,OAAO,GAAGP,QAAhB;AAEAQ,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAEAG,IAAAA,KAAK,CAAE,iCAAF,EAAoC;AACvCC,MAAAA,MAAM,EAAE,MAD+B;AAEvCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,OAAf,CAFiC;AAGvCQ,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAH8B,KAApC,CAAL,CAOGC,IAPH,CAOSC,QAAD,IAAc;AAClB,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChBV,QAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAQ,CAACE,IAArB;AACD;AACF,KAXH,EAYGC,KAZH,CAYUC,GAAD,IAAS;AACdb,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,MAAAA,OAAO,CAACc,KAAR,CAAcD,GAAd;AACD,KAfH,EAX8D,CA4B9D;AACD,GA7BD;;AA+BA,WAASE,cAAT,CAAwBC,KAAxB,EAAoC;AAClC,WAAOvB,WAAW,CAAEwB,IAAD,IAAU;AAC3B,aAAO,EAAE,GAAGA,IAAL;AAAW,WAAGD;AAAd,OAAP;AACD,KAFiB,CAAlB;AAGD;;AAED,sBACE;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA,2BACE;AAAM,MAAA,EAAE,EAAC,YAAT;AAAsB,MAAA,QAAQ,EAAEpB,QAAhC;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,eAAR;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,YAAY,EAAC,EAHf;AAIE,UAAA,QAAQ,EAAGC,CAAD,IAAOkB,cAAc,CAAC;AAAErB,YAAAA,QAAQ,EAAEG,CAAC,CAACqB,MAAF,CAASF;AAArB,WAAD;AAJjC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAK,QAAA,EAAE,EAAC,eAAR;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,YAAY,EAAC,EAHf;AAIE,UAAA,QAAQ,EAAGnB,CAAD,IAAOkB,cAAc,CAAC;AAAEpB,YAAAA,QAAQ,EAAEE,CAAC,CAACqB,MAAF,CAASF;AAArB,WAAD;AAJjC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAmBE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAtEuB1B,M;UACLD,W;;;KADKC,M","sourcesContent":["import { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../../styles/SignUp.css\";\n\nexport default function SignUp() {\n  const navigate = useNavigate();\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    //.. handle submit\n    // .. check that this username doesn't exist\n    //.. send to database\n    // redirect to main page.\n\n    const newUser = formData;\n\n    console.log(newUser);\n\n    fetch(`http://localhost:5000/users/add`, {\n      method: \"POST\",\n      body: JSON.stringify(newUser),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((response) => {\n        if (!response.ok) {\n          console.log(response.text);\n        }\n      })\n      .catch((err) => {\n        console.log(\"im in here\");\n        console.error(err);\n      });\n\n    // navigate(\"/login\");\n  };\n\n  function updateFormData(value: any) {\n    return setFormData((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  return (\n    <div id=\"signUpContainer\">\n      <form id=\"signUpForm\" onSubmit={onSubmit}>\n        <div id=\"usernameInput\">\n          <label htmlFor=\"username\">Create a username: </label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            defaultValue=\"\"\n            onChange={(e) => updateFormData({ username: e.target.value })}\n          />\n        </div>\n        <div id=\"passwordInput\">\n          <label htmlFor=\"password\">Password: </label>\n          <input\n            type=\"text\"\n            id=\"password\"\n            defaultValue=\"\"\n            onChange={(e) => updateFormData({ password: e.target.value })}\n          />\n        </div>\n        <input type=\"submit\" value=\"Register!\" />\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}