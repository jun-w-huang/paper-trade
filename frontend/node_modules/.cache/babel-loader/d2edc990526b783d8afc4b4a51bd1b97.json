{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/auth/login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { userID } from \"../../interfaces\";\nimport \"../../styles/login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Login(props) {\n  _s();\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  const navigate = useNavigate();\n\n  const onChange = e => {\n    setFormData({\n      username: e.target.value,\n      password: e.target.value\n    });\n  };\n\n  const onSubmit = async e => {\n    // check is correct,,, we will skip it for now\n    e.preventDefault();\n    const userCredentials = formData; // fetchUser\n\n    const fetchUser = async () => {\n      const response = await fetch(`http://localhost:5000/auth/`, {\n        method: \"POST\",\n        body: JSON.stringify(userCredentials),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const userObject = await response.json();\n      console.log(`token is ${userObject.token}`);\n      return userObject;\n    };\n\n    const user = await fetchUser();\n\n    if (user) {\n      // props.userID = user.id;\n      props.handleID(user.id);\n      console.log(user.id); // navigate(\"/dashboard\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"loginContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"loginForm\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"usernameInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          defaultValue: \"\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"passwordInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"password\",\n          defaultValue: \"\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"5gbveBppeQaEnvUtWTQBk7uhZQo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/auth/login.tsx"],"names":["React","useState","useNavigate","userID","Login","props","formData","setFormData","username","password","navigate","onChange","e","target","value","onSubmit","preventDefault","userCredentials","fetchUser","response","fetch","method","body","JSON","stringify","headers","userObject","json","console","log","token","user","handleID","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAO,wBAAP;;AAMA,OAAO,SAASC,KAAT,CAAeC,KAAf,EAAkC;AAAA;;AACvC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC;AACvCO,IAAAA,QAAQ,EAAE,EAD6B;AAEvCC,IAAAA,QAAQ,EAAE;AAF6B,GAAD,CAAxC;AAKA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,QAAMS,QAAQ,GAAIC,CAAD,IAA4C;AAC3DL,IAAAA,WAAW,CAAC;AACVC,MAAAA,QAAQ,EAAEI,CAAC,CAACC,MAAF,CAASC,KADT;AAEVL,MAAAA,QAAQ,EAAEG,CAAC,CAACC,MAAF,CAASC;AAFT,KAAD,CAAX;AAID,GALD;;AAOA,QAAMC,QAAQ,GAAG,MAAOH,CAAP,IAA+C;AAC9D;AACAA,IAAAA,CAAC,CAACI,cAAF;AAEA,UAAMC,eAAe,GAAGX,QAAxB,CAJ8D,CAM9D;;AACA,UAAMY,SAAS,GAAG,YAAY;AAC5B,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,6BAAF,EAAgC;AAC1DC,QAAAA,MAAM,EAAE,MADkD;AAE1DC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,eAAf,CAFoD;AAG1DQ,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAHiD,OAAhC,CAA5B;AAOA,YAAMC,UAAU,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAzB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAa,YAAWH,UAAU,CAACI,KAAM,EAAzC;AACA,aAAOJ,UAAP;AACD,KAXD;;AAaA,UAAMK,IAAI,GAAG,MAAMb,SAAS,EAA5B;;AAEA,QAAIa,IAAJ,EAAU;AACR;AACA1B,MAAAA,KAAK,CAAC2B,QAAN,CAAeD,IAAI,CAACE,EAApB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACE,EAAjB,EAHQ,CAIR;AACD;AACF,GA5BD;;AA8BA,sBACE;AAAK,IAAA,EAAE,EAAC,gBAAR;AAAA,2BACE;AAAM,MAAA,EAAE,EAAC,WAAT;AAAqB,MAAA,QAAQ,EAAElB,QAA/B;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,eAAR;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,YAAY,EAAC,EAHf;AAIE,UAAA,QAAQ,EAAEJ;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AAAK,QAAA,EAAE,EAAC,eAAR;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,EAAE,EAAC,UAFL;AAGE,UAAA,YAAY,EAAC,EAHf;AAIE,UAAA,QAAQ,EAAEA;AAJZ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAmBE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GAtEeP,K;UAMGF,W;;;KANHE,K","sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { userID } from \"../../interfaces\";\nimport \"../../styles/login.css\";\n\ninterface loginProps {\n  handleID: (userID: string) => void;\n}\n\nexport function Login(props: loginProps) {\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData({\n      username: e.target.value,\n      password: e.target.value,\n    });\n  };\n\n  const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    // check is correct,,, we will skip it for now\n    e.preventDefault();\n\n    const userCredentials = formData;\n\n    // fetchUser\n    const fetchUser = async () => {\n      const response = await fetch(`http://localhost:5000/auth/`, {\n        method: \"POST\",\n        body: JSON.stringify(userCredentials),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      const userObject = await response.json();\n      console.log(`token is ${userObject.token}`);\n      return userObject;\n    };\n\n    const user = await fetchUser();\n\n    if (user) {\n      // props.userID = user.id;\n      props.handleID(user.id);\n      console.log(user.id);\n      // navigate(\"/dashboard\");\n    }\n  };\n\n  return (\n    <div id=\"loginContainer\">\n      <form id=\"loginForm\" onSubmit={onSubmit}>\n        <div id=\"usernameInput\">\n          <label htmlFor=\"username\">Username: </label>\n          <input\n            type=\"text\"\n            id=\"username\"\n            defaultValue=\"\"\n            onChange={onChange}\n          />\n        </div>\n        <div id=\"passwordInput\">\n          <label htmlFor=\"password\">Password: </label>\n          <input\n            type=\"text\"\n            id=\"password\"\n            defaultValue=\"\"\n            onChange={onChange}\n          />\n        </div>\n        <input type=\"submit\" value=\"Login\" />\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}