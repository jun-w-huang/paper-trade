{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/stockList.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getStockLatestPrice } from \"../helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Stock(props) {\n  _s();\n\n  const initialPrice = getStockLatestPrice(props.stock.symbol);\n  const [latestPrice, setLatestPrice] = useState(initialPrice);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      console.log('This will run every second!');\n      getStockLatestPrice(props.stock.symbol).then(latestPrice => {\n        setLatestPrice(latestPrice);\n      });\n    }, 9999999999);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.stock.symbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: latestPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.stock.quantity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.stock.pricePurchased\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: parseFloat(props.stock.latestPrice) * parseInt(props.stock.quantity)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.stock.latestPrice * props.stock.quantity - props.stock.pricePurchased * props.stock.quantity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Stock, \"mrd8Wl8END+pTJihCP5CNfWdHAw=\");\n\n_c = Stock;\nexport default function StockList() {\n  _s2();\n\n  const [stocks, setStocks] = useState([]); // This method fetches the stocks from the database.\n\n  useEffect(() => {\n    async function getStocks() {\n      const response = await fetch(`http://localhost:5000/stocks/`);\n\n      if (!response.ok) {\n        const message = `An error occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const stocks = await response.json();\n      setStocks(stocks);\n    }\n\n    getStocks();\n    return;\n  }); // This method will delete a record\n\n  async function deleteStock(id) {\n    await fetch(`http://localhost:5000/${id}`, {\n      method: \"DELETE\"\n    });\n    const newStocks = stocks.filter(el => el._id !== id);\n    setStocks(newStocks);\n  } // This method will map out the records on the table\n\n\n  function stockList() {\n    return stocks.map(stock => {\n      return /*#__PURE__*/_jsxDEV(Stock, {\n        stock: stock,\n        deleteStock: () => deleteStock(stock._id)\n      }, stock._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 8\n      }, this);\n    });\n  } // This following section will display the table with the records of individuals.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Stock List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Symbol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Latest Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price Purchased\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Net Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: stockList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 4\n  }, this);\n}\n\n_s2(StockList, \"ckkB5iKANHozGm/BUdCimNAdz7k=\");\n\n_c2 = StockList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Stock\");\n$RefreshReg$(_c2, \"StockList\");","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/stockList.js"],"names":["React","useEffect","useState","Link","getStockLatestPrice","Stock","props","initialPrice","stock","symbol","latestPrice","setLatestPrice","interval","setInterval","console","log","then","clearInterval","quantity","pricePurchased","parseFloat","parseInt","StockList","stocks","setStocks","getStocks","response","fetch","ok","message","statusText","window","alert","json","deleteStock","id","method","newStocks","filter","el","_id","stockList","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getStockLatestPrice } from \"../helpers\";\n\n \nfunction Stock(props) {\n  const initialPrice = getStockLatestPrice(props.stock.symbol)\n  const[latestPrice, setLatestPrice] = useState(initialPrice);\n\n  useEffect (() => {\n    \n    const interval = setInterval(() => {\n      console.log('This will run every second!');\n      getStockLatestPrice(props.stock.symbol).then((latestPrice) => {\n            setLatestPrice(latestPrice);\n          })\n    }, 9999999999);\n    return () => clearInterval(interval);\n  }, []);\n\n  return(\n    <tr>\n      <td>{props.stock.symbol}</td>\n      <td>{latestPrice}</td>\n      <td>{props.stock.quantity}</td>\n      <td>{props.stock.pricePurchased}</td>\n      <td>{parseFloat(props.stock.latestPrice)*parseInt(props.stock.quantity)}</td>\n      <td>{(props.stock.latestPrice*props.stock.quantity)-(props.stock.pricePurchased*props.stock.quantity)}</td>\n      {/* <td>\n        <Link className=\"btn btn-link\" to={`/edit/${props.stock._id}`}>Edit</Link> |\n        <button className=\"btn btn-link\"\n          onClick={() => {\n            props.deleteStock(props.stock._id);\n          }}\n        >\n          Delete\n        </button>\n      </td> */}\n    </tr>\n  )\n}\n \nexport default function StockList() {\n const [stocks, setStocks] = useState([]);\n \n // This method fetches the stocks from the database.\n useEffect(() => {\n   async function getStocks() {\n     const response = await fetch(`http://localhost:5000/stocks/`);\n \n     if (!response.ok) {\n       const message = `An error occured: ${response.statusText}`;\n       window.alert(message);\n       return;\n     }\n \n     const stocks = await response.json();\n     setStocks(stocks);\n   }\n \n   getStocks();\n \n   return;\n });\n \n // This method will delete a record\n async function deleteStock(id) {\n   await fetch(`http://localhost:5000/${id}`, {\n     method: \"DELETE\"\n   });\n \n   const newStocks = stocks.filter((el) => el._id !== id);\n   setStocks(newStocks);\n }\n \n // This method will map out the records on the table\n function stockList() {\n   return stocks.map((stock) => {\n     return (\n       <Stock\n         stock={stock}\n         deleteStock={() => deleteStock(stock._id)}\n         key={stock._id}\n       />\n     );\n   });\n }\n \n // This following section will display the table with the records of individuals.\n return (\n   <div>\n     <h3>Stock List</h3>\n     <table>\n       <thead>\n         <tr>\n           <th>Symbol</th>\n           <th>Latest Price</th>\n           <th>Quantity</th>\n           <th>Price Purchased</th>\n           <th>Value</th>\n           <th>Net Value</th>\n         </tr>\n       </thead>\n       <tbody>{stockList()}</tbody>\n     </table>\n   </div>\n );\n}"]},"metadata":{},"sourceType":"module"}