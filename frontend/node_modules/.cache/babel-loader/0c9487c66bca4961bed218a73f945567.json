{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paper-trade-tsx/src/PaperTrade.tsx\";\nimport React from 'react';\nimport BuyForm from './forms/BuyForm';\nimport SearchForm from './forms/SearchForm';\nimport StockResultDisplay from './forms/StockResultDisplay';\nimport \"./PaperTrade.css\";\nimport PortfolioDetails from './PortfolioDetails';\nimport PortfolioTable from './PortfolioTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultPortfolio = {\n  name: \"Tech Stocks\",\n  cash: 100000,\n  stocks: [{\n    symbol: \"AAPL\",\n    latestPrice: 132.32,\n    quantity: 200,\n    pricePurchased: 110.23\n  }, {\n    symbol: \"AMZN\",\n    latestPrice: 3456.32,\n    quantity: 100,\n    pricePurchased: 2342.32\n  }]\n};\n\nclass PaperTrade extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      portfolio: defaultPortfolio,\n      JSONOrString: \"hello\",\n      stockJSON: null\n    };\n  }\n\n  handleSearch(JSONOrString) {\n    if (typeof JSONOrString === 'string') {\n      this.setState({\n        JSONOrString: JSONOrString\n      });\n    } else {\n      this.setState({\n        stockJSON: JSONOrString\n      });\n    }\n  }\n\n  handleBuy(cost, quantity, stockJSON) {\n    const portfolio = this.state.portfolio;\n    const newStock = {\n      symbol: stockJSON.symbol,\n      latestPrice: stockJSON.latestPrice,\n      quantity: quantity,\n      pricePurchased: stockJSON.latestPrice\n    }; // check sufficient cash\n\n    if (portfolio.cash > cost) {\n      let found = false; // handle merging stocks in the case that they already exist.\n\n      for (let i = 0; i > portfolio.stocks.length; i++) {\n        if (newStock.symbol === portfolio.stocks[i].symbol) {\n          // quantity will be the sum of both,\n          // price purchased will be (q1 * pricepurchased1) + (q2 * pricepurchased2) / (q1+q2)\n          // eg: 1 stock at 10$, and you buy 2 stocks at 20$, the average price should become\n          // 1*10 = 10, 2*20 = 40, 50/3\n          const oldStock = portfolio.stocks[i];\n          const newTotalQuantity = newStock.quantity + oldStock.quantity;\n          const newAveragePricePurchased = newStock.quantity * newStock.pricePurchased + oldStock.quantity * oldStock.pricePurchased / newTotalQuantity;\n          newStock.quantity = newTotalQuantity;\n          newStock.pricePurchased = newAveragePricePurchased;\n          portfolio.stocks[i] = newStock;\n          found = true;\n          break;\n        }\n      }\n\n      portfolio.cash = portfolio.cash - cost;\n\n      if (found) {\n        portfolio.stocks.push(newStock);\n      }\n\n      this.setState({\n        portfolio: portfolio\n      });\n    }\n  }\n\n  render() {\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleBuy = this.handleBuy.bind(this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"http://localhost:3000/\",\n          children: \"Paper Trade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PortfolioDetails, {\n        portfolio: this.state.portfolio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"forms\",\n        children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n          JSONOrString: this.state.JSONOrString,\n          handleSearch: this.handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this), this.state.stockJSON && /*#__PURE__*/_jsxDEV(StockResultDisplay, {\n          stockJSON: this.state.stockJSON\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 42\n        }, this), this.state.stockJSON && /*#__PURE__*/_jsxDEV(BuyForm, {\n          portfolio: this.state.portfolio,\n          stockJSON: this.state.stockJSON,\n          handleBuy: this.handleBuy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }, this), this.state.portfolio && /*#__PURE__*/_jsxDEV(PortfolioTable, {\n        portfolio: this.state.portfolio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default PaperTrade;","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paper-trade-tsx/src/PaperTrade.tsx"],"names":["React","BuyForm","SearchForm","StockResultDisplay","PortfolioDetails","PortfolioTable","defaultPortfolio","name","cash","stocks","symbol","latestPrice","quantity","pricePurchased","PaperTrade","Component","state","portfolio","JSONOrString","stockJSON","handleSearch","setState","handleBuy","cost","newStock","found","i","length","oldStock","newTotalQuantity","newAveragePricePurchased","push","render","bind"],"mappings":"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","sourcesContent":["import React from 'react';\nimport BuyForm from './forms/BuyForm';\nimport SearchForm from './forms/SearchForm';\nimport StockResultDisplay from './forms/StockResultDisplay';\nimport { IRootObject, Portfolio } from './interfaces';\nimport \"./PaperTrade.css\"\nimport PortfolioDetails from './PortfolioDetails';\nimport PortfolioTable from './PortfolioTable';\n\n\nconst defaultPortfolio =  {\n    name: \"Tech Stocks\",\n    cash: 100000,\n    stocks: [{\n        symbol: \"AAPL\",\n        latestPrice: 132.32,\n        quantity: 200,\n        pricePurchased: 110.23,\n    },\n    {\n        symbol: \"AMZN\",\n        latestPrice: 3456.32,\n        quantity: 100,\n        pricePurchased: 2342.32,\n    }]\n}\n\ntype PaperTradeState = {\n    portfolio: Portfolio\n    JSONOrString: IRootObject | string\n    stockJSON: IRootObject | null\n}\n\nclass PaperTrade extends React.Component<{}, PaperTradeState> {\n    state={\n        portfolio: defaultPortfolio,\n        JSONOrString: \"hello\",\n        stockJSON: null,\n    }\n\n    handleSearch(JSONOrString: IRootObject | string) {\n        if (typeof JSONOrString === 'string') {\n            this.setState({\n                JSONOrString: JSONOrString,\n            });\n        } else {\n            this.setState({\n                stockJSON: JSONOrString\n            });\n        }\n    }\n\n    handleBuy(cost: number, quantity: number, stockJSON: IRootObject) {\n        const portfolio = this.state.portfolio\n\n        const newStock = {\n            symbol: stockJSON.symbol,\n            latestPrice: stockJSON.latestPrice,\n            quantity: quantity,\n            pricePurchased: stockJSON.latestPrice,\n        }\n\n        // check sufficient cash\n        if (portfolio.cash > cost) {\n            let found = false;\n            // handle merging stocks in the case that they already exist.\n            for (let i = 0; i > portfolio.stocks.length; i++) {\n                if (newStock.symbol === portfolio.stocks[i].symbol) {\n                    // quantity will be the sum of both,\n                    // price purchased will be (q1 * pricepurchased1) + (q2 * pricepurchased2) / (q1+q2)\n                    // eg: 1 stock at 10$, and you buy 2 stocks at 20$, the average price should become\n                    // 1*10 = 10, 2*20 = 40, 50/3\n                    const oldStock = portfolio.stocks[i];\n                    const newTotalQuantity = newStock.quantity + oldStock.quantity;\n                    const newAveragePricePurchased = \n                    (newStock.quantity * newStock.pricePurchased) \n                    + (oldStock.quantity * oldStock.pricePurchased)\n                    / (newTotalQuantity);\n                    newStock.quantity = newTotalQuantity;\n                    newStock.pricePurchased = newAveragePricePurchased;\n                    portfolio.stocks[i] = newStock;\n                    found = true;\n                    break;\n                }\n            }          \n            portfolio.cash = portfolio.cash - cost;\n            if (found!) {\n                portfolio.stocks.push(newStock);\n            }\n\n            this.setState({\n                portfolio: portfolio\n            });\n    }\n        \n    }\n\n    render() {\n        this.handleSearch = this.handleSearch.bind(this)\n        this.handleBuy = this.handleBuy.bind(this)\n\n\n        return(\n        <div className=\"container\">\n            <div id=\"logo\">\n                <a href=\"http://localhost:3000/\">\n                    Paper Trade\n                </a>\n            </div>\n            <PortfolioDetails portfolio={this.state.portfolio}/>\n            <div id=\"forms\">\n                <SearchForm JSONOrString={this.state.JSONOrString} handleSearch={this.handleSearch}/>\n                {this.state.stockJSON && <StockResultDisplay stockJSON={this.state.stockJSON}/>}\n                {this.state.stockJSON && <BuyForm \n                portfolio={this.state.portfolio} \n                stockJSON={this.state.stockJSON} \n                handleBuy={this.handleBuy}/>}\n\n            </div>\n            \n            {this.state.portfolio && <PortfolioTable portfolio={this.state.portfolio}/>}\n        </div>\n        )\n    }\n}\n\nexport default PaperTrade;\n"]},"metadata":{},"sourceType":"module"}