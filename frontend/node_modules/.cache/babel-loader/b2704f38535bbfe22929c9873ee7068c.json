{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/SignUp.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"../styles/SignUp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUp() {\n  _s();\n\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault(); //.. handle submit\n    // .. check that this username doesn't exist\n    //.. send to database\n    // redirect to main page.\n\n    const newUser = formData;\n    console.log(newUser);\n    await fetch(`http://localhost:5000/users/add`, {\n      method: \"POST\",\n      body: JSON.stringify(newUser),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  };\n\n  function updateFormData(value) {\n    return setFormData(prev => {\n      return { ...prev,\n        ...value\n      };\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"signUpContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"signUpForm\",\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"usernameInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Create a username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          defaultValue: \"\",\n          onChange: e => updateFormData({\n            username: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"passwordInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"password\",\n          defaultValue: \"\",\n          onChange: e => updateFormData({\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Register!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignUp, \"M/s3gYHm1AxjmnbMedRpKXnsOr4=\");\n\n_c = SignUp;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/SignUp.tsx"],"names":["useState","SignUp","formData","setFormData","username","password","onSubmit","e","preventDefault","newUser","console","log","fetch","method","body","JSON","stringify","headers","updateFormData","value","prev","target"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,sBAAP;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAE7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC;AACrCI,IAAAA,QAAQ,EAAE,EAD2B;AAErCC,IAAAA,QAAQ,EAAE;AAF2B,GAAD,CAAxC;;AAKA,QAAMC,QAAQ,GAAG,MAAOC,CAAP,IAA+C;AAC5DA,IAAAA,CAAC,CAACC,cAAF,GAD4D,CAK5D;AACA;AACA;AACA;;AAEA,UAAMC,OAAO,GAAGP,QAAhB;AAEAQ,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AAEA,UAAMG,KAAK,CAAE,iCAAF,EAAoC;AAC3CC,MAAAA,MAAM,EAAE,MADmC;AAE3CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,OAAf,CAFqC;AAG3CQ,MAAAA,OAAO,EAAE;AACT,wBAAgB;AADP;AAHkC,KAApC,CAAX;AAOH,GArBD;;AAuBA,WAASC,cAAT,CAAwBC,KAAxB,EAAoC;AAChC,WAAOhB,WAAW,CAAEiB,IAAD,IAAU;AAC3B,aAAO,EAAE,GAAGA,IAAL;AAAW,WAAGD;AAAd,OAAP;AACD,KAFiB,CAAlB;AAGD;;AAGH,sBACI;AAAK,IAAA,EAAE,EAAC,iBAAR;AAAA,2BACI;AAAM,MAAA,EAAE,EAAC,YAAT;AAAsB,MAAA,QAAQ,EAAEb,QAAhC;AAAA,8BACJ;AAAY,QAAA,EAAE,EAAC,eAAf;AAAA,gCACY;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADZ,eAEY;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,UAAtB;AAAiC,UAAA,YAAY,EAAC,EAA9C;AAAiD,UAAA,QAAQ,EAAGC,CAAD,IAAOW,cAAc,CAAC;AAAEd,YAAAA,QAAQ,EAAEG,CAAC,CAACc,MAAF,CAASF;AAArB,WAAD;AAAhF;AAAA;AAAA;AAAA;AAAA,gBAFZ;AAAA;AAAA;AAAA;AAAA;AAAA,cADI,eAKI;AAAK,QAAA,EAAE,EAAC,eAAR;AAAA,gCACI;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,EAAE,EAAC,UAAtB;AAAiC,UAAA,YAAY,EAAC,EAA9C;AAAiD,UAAA,QAAQ,EAAGZ,CAAD,IAAOW,cAAc,CAAC;AAAEb,YAAAA,QAAQ,EAAEE,CAAC,CAACc,MAAF,CAASF;AAArB,WAAD;AAAhF;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH;;GApDuBlB,M;;KAAAA,M","sourcesContent":["import { useState } from \"react\"\nimport \"../styles/SignUp.css\"\n\nexport default function SignUp() {\n\n    const [formData, setFormData] = useState({\n        username: \"\",\n        password: \"\",\n    })\n\n    const onSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault()\n\n\n        \n        //.. handle submit\n        // .. check that this username doesn't exist\n        //.. send to database\n        // redirect to main page.\n\n        const newUser = formData;\n\n        console.log(newUser)\n\n        await fetch(`http://localhost:5000/users/add`, {\n            method: \"POST\",\n            body: JSON.stringify(newUser),\n            headers: {\n            'Content-Type': 'application/json'\n            },\n        });\n    }\n\n    function updateFormData(value: any) {\n        return setFormData((prev) => {\n          return { ...prev, ...value };\n        });\n      }\n\n\n    return(\n        <div id=\"signUpContainer\">\n            <form id=\"signUpForm\" onSubmit={onSubmit}>\n        <       div id=\"usernameInput\">\n                    <label htmlFor=\"username\">Create a username: </label>\n                    <input type=\"text\" id=\"username\" defaultValue=\"\" onChange={(e) => updateFormData({ username: e.target.value })}/>\n                </div>\n                <div id=\"passwordInput\">\n                    <label htmlFor=\"password\">Password: </label>\n                    <input type=\"text\" id=\"password\" defaultValue=\"\" onChange={(e) => updateFormData({ password: e.target.value })}/>\n                </div>\n                <input type=\"submit\" value=\"Register!\" />\n            </form>\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}