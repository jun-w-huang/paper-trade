{"ast":null,"code":"export async function getStockJSON(ticker) {\n  console.log(`fetching ${ticker} JSON `);\n\n  try {\n    const response = await fetch(`https://sandbox.iexapis.com/stable/stock/${ticker}/quote/\n    ?token=Tpk_dec7b122df1e4bce8e1ebe0e6632fc06`);\n    const stockJSON = await response.json();\n    return stockJSON;\n  } catch {\n    return `Tried to fetch ${ticker}, but the stock wasn't found ):`;\n  }\n} // returns a valid index if the stock exists in the portfolio, otherwise returns -1\n\nexport function getStockIndex(portfolio, stock) {\n  const searchValue = stock.symbol;\n\n  const isStockSymbol = stock => {\n    return stock.symbol === searchValue;\n  };\n\n  const index = portfolio.stocks.findIndex(isStockSymbol);\n  return index;\n}","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paper-trade-tsx/src/helpers.tsx"],"names":["getStockJSON","ticker","console","log","response","fetch","stockJSON","json","getStockIndex","portfolio","stock","searchValue","symbol","isStockSymbol","index","stocks","findIndex"],"mappings":"AAEA,OAAO,eAAeA,YAAf,CAA4BC,MAA5B,EAA2E;AAC9EC,EAAAA,OAAO,CAACC,GAAR,CAAa,YAAWF,MAAO,QAA/B;;AACA,MAAI;AACA,UAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,4CAA2CJ,MAAO;AACxF,gDADoC,CAA5B;AAEA,UAAMK,SAAS,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAxB;AACA,WAAOD,SAAP;AACH,GALD,CAKE,MAAM;AACJ,WAAQ,kBAAiBL,MAAO,iCAAhC;AACH;AACJ,C,CAED;;AACA,OAAO,SAASO,aAAT,CAAuBC,SAAvB,EAA6CC,KAA7C,EAA+E;AAClF,QAAMC,WAAW,GAAGD,KAAK,CAACE,MAA1B;;AACA,QAAMC,aAAa,GAAIH,KAAD,IAAkB;AACpC,WAAOA,KAAK,CAACE,MAAN,KAAiBD,WAAxB;AACH,GAFD;;AAGA,QAAMG,KAAK,GAAGL,SAAS,CAACM,MAAV,CAAiBC,SAAjB,CAA2BH,aAA3B,CAAd;AACA,SAAOC,KAAP;AACH","sourcesContent":["import { IRootObject, Portfolio, Stock } from \"./interfaces\";\n\nexport async function getStockJSON(ticker: string): Promise<IRootObject | string> {\n    console.log(`fetching ${ticker} JSON `);\n    try {\n        const response = await fetch(`https://sandbox.iexapis.com/stable/stock/${ticker}/quote/\n    ?token=Tpk_dec7b122df1e4bce8e1ebe0e6632fc06`)\n        const stockJSON = await response.json();\n        return stockJSON\n    } catch {\n        return `Tried to fetch ${ticker}, but the stock wasn't found ):`;\n    }\n}\n\n// returns a valid index if the stock exists in the portfolio, otherwise returns -1\nexport function getStockIndex(portfolio: Portfolio, stock: Stock | IRootObject ): any {\n    const searchValue = stock.symbol\n    const isStockSymbol = (stock: Stock) => {\n        return stock.symbol === searchValue\n    }\n    const index = portfolio.stocks.findIndex(isStockSymbol)\n    return index\n}"]},"metadata":{},"sourceType":"module"}