{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/forms/BuyAndSellForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultFormData = {\n  quantity: \"100\"\n};\n\nfunction BuyAndSellForm(props) {\n  _s();\n\n  console.log(\"buy form re rendering\");\n  const [formData, setFormData] = useState(defaultFormData);\n  const {\n    quantity\n  } = formData;\n  const [cost, setCost] = useState(0);\n  const [sellButtonVisibility, setSellButtonVisibility] = useState(false);\n  const params = useParams();\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(`http://localhost:5000/record/${params.id.toString()}`);\n\n      if (!response.ok) {\n        const message = `An error has occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const record = await response.json();\n\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n\n      setForm(record);\n    }\n\n    fetchData();\n    return;\n  }, [params.id, navigate]);\n  useEffect(() => {\n    console.log(\"use effect triggered\");\n    setCost(parseInt(quantity) * props.stockJSON.latestPrice);\n  });\n\n  const onChange = e => {\n    setFormData(prevState => ({ ...prevState,\n      [e.target.id]: e.target.value\n    }));\n    setCost(parseInt(e.target.value) * props.stockJSON.latestPrice);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    console.log(\"submitting buy form\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"BuyForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"quantity\",\n        children: \"Quantity: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"quantity\",\n        defaultValue: \"100\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        name: \"buyButton\",\n        value: \"Buy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Cost / Revenue: \", cost.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BuyAndSellForm, \"ULqsSPUay7g+1+kSfzWH9lq+87k=\", false, function () {\n  return [useParams];\n});\n\n_c = BuyAndSellForm;\nexport default BuyAndSellForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BuyAndSellForm\");","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/forms/BuyAndSellForm.tsx"],"names":["React","useEffect","useState","useParams","defaultFormData","quantity","BuyAndSellForm","props","console","log","formData","setFormData","cost","setCost","sellButtonVisibility","setSellButtonVisibility","params","fetchData","id","toString","response","fetch","ok","message","statusText","window","alert","record","json","navigate","setForm","parseInt","stockJSON","latestPrice","onChange","e","prevState","target","value","onSubmit","preventDefault","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,IAA8BC,SAA9B,EAAyCC,QAAzC,QAAyD,OAAzD;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AASA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,QAAQ,EAAE;AADU,CAAxB;;AAIA,SAASC,cAAT,CAAwBC,KAAxB,EAAkE;AAAA;;AAE9DC,EAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAACE,eAAD,CAAxC;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAeK,QAArB;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACY,oBAAD,EAAuBC,uBAAvB,IAAkDb,QAAQ,CAAC,KAAD,CAAhE;AAGA,QAAMc,MAAM,GAAGb,SAAS,EAAxB;AAGAF,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAegB,SAAf,GAA2B;AACzB,YAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,CAAUC,QAAV,EAAX;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BL,MAAM,CAACE,EAAP,CAAUC,QAAV,EAAqB,EAAtD,CAA5B;;AAEA,UAAI,CAACC,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAMC,OAAO,GAAI,yBAAwBH,QAAQ,CAACI,UAAW,EAA7D;AACAC,QAAAA,MAAM,CAACC,KAAP,CAAaH,OAAb;AACA;AACD;;AAED,YAAMI,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAArB;;AACA,UAAI,CAACD,MAAL,EAAa;AACXF,QAAAA,MAAM,CAACC,KAAP,CAAc,kBAAiBR,EAAG,YAAlC;AACAW,QAAAA,QAAQ,CAAC,GAAD,CAAR;AACA;AACD;;AAEDC,MAAAA,OAAO,CAACH,MAAD,CAAP;AACD;;AAEDV,IAAAA,SAAS;AAET;AACD,GAxBM,EAwBJ,CAACD,MAAM,CAACE,EAAR,EAAYW,QAAZ,CAxBI,CAAT;AA0BA5B,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACAI,IAAAA,OAAO,CAACkB,QAAQ,CAAC1B,QAAD,CAAR,GAAmBE,KAAK,CAACyB,SAAN,CAAgBC,WAApC,CAAP;AACH,GAHQ,CAAT;;AAKA,QAAMC,QAAQ,GAAIC,CAAD,IAA4C;AACzDxB,IAAAA,WAAW,CAAEyB,SAAD,KAAgB,EAC5B,GAAGA,SADyB;AAE5B,OAACD,CAAC,CAACE,MAAF,CAASnB,EAAV,GAAeiB,CAAC,CAACE,MAAF,CAASC;AAFI,KAAhB,CAAD,CAAX;AAIAzB,IAAAA,OAAO,CAACkB,QAAQ,CAACI,CAAC,CAACE,MAAF,CAASC,KAAV,CAAR,GAAyB/B,KAAK,CAACyB,SAAN,CAAgBC,WAA1C,CAAP;AACH,GAND;;AAQA,QAAMM,QAAQ,GAAIJ,CAAD,IAAyC;AACtDA,IAAAA,CAAC,CAACK,cAAF;AACAhC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACH,GAHD;;AAKA,sBACI;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAE8B,QAAhB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,UAAtB;AAAiC,QAAA,YAAY,EAAC,KAA9C;AAAoD,QAAA,QAAQ,EAAEL;AAA9D;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,WAA1B;AAAsC,QAAA,KAAK,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAA,qCAAoBtB,IAAI,CAAC6B,OAAL,CAAa,CAAb,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GApEQnC,c;UAUUH,S;;;KAVVG,c;AAwET,eAAeA,cAAf","sourcesContent":["import React, { ReactElement, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { IRootObject, Portfolio } from \"../../interfaces\";\n\ninterface BuyAndSellFormProps {\n    stockJSON : IRootObject\n    portfolio: Portfolio\n    // handleBuy: (cost: number, quantity: number, stockJSON: IRootObject) => void\n}\n\nconst defaultFormData = {\n    quantity: \"100\",\n  };\n\nfunction BuyAndSellForm(props: BuyAndSellFormProps): ReactElement {\n    \n    console.log(\"buy form re rendering\")\n    const [formData, setFormData] = useState(defaultFormData);\n\n    const { quantity } = formData\n    const [cost, setCost] = useState(0);\n    const [sellButtonVisibility, setSellButtonVisibility] = useState(false)\n\n\n    const params = useParams();\n\n\n    useEffect(() => {\n        async function fetchData() {\n          const id = params.id.toString();\n          const response = await fetch(`http://localhost:5000/record/${params.id.toString()}`);\n      \n          if (!response.ok) {\n            const message = `An error has occured: ${response.statusText}`;\n            window.alert(message);\n            return;\n          }\n      \n          const record = await response.json();\n          if (!record) {\n            window.alert(`Record with id ${id} not found`);\n            navigate(\"/\");\n            return;\n          }\n      \n          setForm(record);\n        }\n      \n        fetchData();\n      \n        return;\n      }, [params.id, navigate]);\n\n    useEffect(() => {\n        console.log(\"use effect triggered\")\n        setCost(parseInt(quantity)*props.stockJSON.latestPrice)\n    });\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setFormData((prevState) => ({\n        ...prevState,\n        [e.target.id]: e.target.value,\n        }));\n        setCost(parseInt(e.target.value)*props.stockJSON.latestPrice)\n    };\n\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault()\n        console.log(\"submitting buy form\")\n    }\n\n    return(\n        <div id=\"BuyForm\">\n            <form onSubmit={onSubmit}>\n                <label htmlFor=\"quantity\">Quantity: </label>\n                <input type=\"text\" id=\"quantity\" defaultValue=\"100\" onChange={onChange}/>\n                <input type=\"submit\" name=\"buyButton\" value=\"Buy\"/>\n                {/* <input type=\"button\" hidden={sellButtonVisibility} value=\"Sell\" onClick={() => onSell()}/> */}\n            </form>\n            <p>Cost / Revenue: {cost.toFixed(2)}</p>\n        </div>\n    )\n}\n\n\n\nexport default BuyAndSellForm;"]},"metadata":{},"sourceType":"module"}