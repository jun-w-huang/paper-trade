{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paper-trade-tsx/client/src/PaperTrade.tsx\";\nimport React from 'react';\nimport { getStockIndex } from './helpers';\nimport \"./PaperTrade.css\";\nimport SearchForm from './components/forms/SearchForm';\nimport PortfolioDetails from './PortfolioDetails';\nimport PortfolioTable from './PortfolioTable';\nimport { Route, Routes } from \"react-router-dom\";\nimport Navbar from \"./components/navbar\";\nimport Edit from \"./components/edit\";\nimport Create from \"./components/create\";\nimport RecordList from './components/recordlist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultPortfolio = {\n  name: \"Tech Stocks\",\n  cash: 1000000,\n  stocks: [{\n    symbol: \"AAPL\",\n    latestPrice: 132.32,\n    quantity: 200,\n    pricePurchased: 110.23\n  }, {\n    symbol: \"AMZN\",\n    latestPrice: 3456.32,\n    quantity: 100,\n    pricePurchased: 2342.32\n  }]\n};\n\nclass PaperTrade extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      portfolio: defaultPortfolio,\n      JSONOrString: \"\",\n      stockJSON: undefined\n    };\n  }\n\n  handleSearch(JSONOrString) {\n    if (typeof JSONOrString === 'string') {\n      this.setState({\n        JSONOrString: JSONOrString,\n        stockJSON: undefined\n      });\n    } else {\n      this.setState({\n        JSONOrString: JSONOrString,\n        stockJSON: JSONOrString\n      });\n    }\n  }\n\n  handleBuy(cost, quantity, stockJSON) {\n    const portfolio = this.state.portfolio;\n    const newStock = {\n      symbol: stockJSON.symbol,\n      latestPrice: stockJSON.latestPrice,\n      quantity: quantity,\n      pricePurchased: stockJSON.latestPrice\n    };\n\n    const combineTwoStocks = (newStock, oldStock) => {\n      // quantity will be the sum of both,\n      // price purchased will be (q1 * pricepurchased1 + q2 * pricepurchased2)/ (q1+q2)\n      // eg: 1 stock at 10$, and you buy 2 stocks at 20$, the average price should become\n      // 1*10 = 10, 2*20 = 40, 50/3\n      const newTotalQuantity = newStock.quantity + oldStock.quantity;\n      const newAveragePricePurchased = (newStock.quantity * newStock.pricePurchased + oldStock.quantity * oldStock.pricePurchased) / newTotalQuantity;\n      newStock.quantity = newTotalQuantity;\n      newStock.pricePurchased = +newAveragePricePurchased.toFixed(2);\n      return newStock;\n    }; // check sufficient cash\n\n\n    if (portfolio.cash > cost) {\n      portfolio.cash = portfolio.cash - cost; // checks if stock exists and merges them if they are\n\n      const index = getStockIndex(portfolio, newStock);\n\n      if (index !== -1) {\n        portfolio.stocks[index] = combineTwoStocks(newStock, portfolio.stocks[index]);\n      } else {\n        portfolio.stocks.push(newStock);\n      }\n\n      this.setState({\n        portfolio: portfolio\n      });\n    }\n  }\n\n  render() {\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleBuy = this.handleBuy.bind(this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"http://localhost:3000/\",\n          children: \"Paper Trade\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(RecordList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 46\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/edit/:id\",\n            element: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/create\",\n            element: /*#__PURE__*/_jsxDEV(Create, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 52\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PortfolioDetails, {\n        portfolio: this.state.portfolio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"forms\",\n        children: /*#__PURE__*/_jsxDEV(SearchForm, {\n          portfolio: this.state.portfolio,\n          JSONOrString: this.state.JSONOrString,\n          handleSearch: this.handleSearch,\n          handleBuy: this.handleBuy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), this.state.portfolio && /*#__PURE__*/_jsxDEV(PortfolioTable, {\n        portfolio: this.state.portfolio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 42\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PaperTrade;","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paper-trade-tsx/client/src/PaperTrade.tsx"],"names":["React","getStockIndex","SearchForm","PortfolioDetails","PortfolioTable","Route","Routes","Navbar","Edit","Create","RecordList","defaultPortfolio","name","cash","stocks","symbol","latestPrice","quantity","pricePurchased","PaperTrade","Component","state","portfolio","JSONOrString","stockJSON","undefined","handleSearch","setState","handleBuy","cost","newStock","combineTwoStocks","oldStock","newTotalQuantity","newAveragePricePurchased","toFixed","index","push","render","bind"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { getStockIndex } from './helpers';\nimport { IRootObject, Portfolio, Stock } from './interfaces';\nimport \"./PaperTrade.css\"\n\nimport SearchForm from './components/forms/SearchForm';\nimport PortfolioDetails from './PortfolioDetails';\nimport PortfolioTable from './PortfolioTable';\n\nimport { Route, Routes } from \"react-router-dom\";\n\nimport Navbar from \"./components/navbar\";\nimport Edit from \"./components/edit\";\nimport Create from \"./components/create\";\nimport RecordList from './components/recordlist';\n\n\nconst defaultPortfolio =  {\n    name: \"Tech Stocks\",\n    cash: 1000000,\n    stocks: [{\n        symbol: \"AAPL\",\n        latestPrice: 132.32,\n        quantity: 200,\n        pricePurchased: 110.23,\n    },\n    {\n        symbol: \"AMZN\",\n        latestPrice: 3456.32,\n        quantity: 100,\n        pricePurchased: 2342.32,\n    }]\n}\n\ntype PaperTradeState = {\n    portfolio: Portfolio\n    JSONOrString: IRootObject | string\n    stockJSON?: IRootObject\n}\n\nclass PaperTrade extends React.Component<{}, PaperTradeState> {\n    state={\n        portfolio: defaultPortfolio,\n        JSONOrString: \"\",\n        stockJSON: undefined,\n    }\n\n    handleSearch(JSONOrString: IRootObject | string) {\n        if (typeof JSONOrString === 'string') {\n            this.setState({\n                JSONOrString: JSONOrString,\n                stockJSON: undefined,\n            })\n        } else {\n            this.setState({\n                JSONOrString: JSONOrString,\n                stockJSON: JSONOrString\n            });\n        }\n    }\n\n    handleBuy(cost: number, quantity: number, stockJSON: IRootObject) {\n        const portfolio = this.state.portfolio\n\n        const newStock = {\n            symbol: stockJSON.symbol,\n            latestPrice: stockJSON.latestPrice,\n            quantity: quantity,\n            pricePurchased: stockJSON.latestPrice,\n        }\n\n        const combineTwoStocks = (newStock: Stock, oldStock: Stock) => {\n            // quantity will be the sum of both,\n            // price purchased will be (q1 * pricepurchased1 + q2 * pricepurchased2)/ (q1+q2)\n            // eg: 1 stock at 10$, and you buy 2 stocks at 20$, the average price should become\n            // 1*10 = 10, 2*20 = 40, 50/3\n            const newTotalQuantity = newStock.quantity + oldStock.quantity;\n            const newAveragePricePurchased = \n                (newStock.quantity * newStock.pricePurchased\n                + oldStock.quantity * oldStock.pricePurchased)\n                / (newTotalQuantity);\n            newStock.quantity = newTotalQuantity;\n            newStock.pricePurchased = +newAveragePricePurchased.toFixed(2);\n            return newStock\n        }\n\n        // check sufficient cash\n        if (portfolio.cash > cost) {\n            portfolio.cash = portfolio.cash - cost;\n            // checks if stock exists and merges them if they are\n            const index = getStockIndex(portfolio, newStock)\n            if (index !== -1) {\n                portfolio.stocks[index] = combineTwoStocks(newStock, portfolio.stocks[index])\n            } else {\n                portfolio.stocks.push(newStock);\n            }\n            this.setState({\n                portfolio: portfolio\n            });\n        }\n    }\n\n    render() {\n        this.handleSearch = this.handleSearch.bind(this)\n        this.handleBuy = this.handleBuy.bind(this)\n\n        return(\n            <div className=\"container\">\n                <div id=\"logo\">\n                    <a href=\"http://localhost:3000/\">\n                        Paper Trade\n                    </a>\n                </div>\n                <div>\n                <Navbar />\n                <Routes>\n                    <Route path=\"/\" element={<RecordList />} />\n                    <Route path=\"/edit/:id\" element={<Edit />} />\n                    <Route path=\"/create\" element={<Create />} />\n                </Routes>\n                </div>\n                <PortfolioDetails portfolio={this.state.portfolio}/>\n                <div id=\"forms\">\n                    <SearchForm \n                        portfolio={this.state.portfolio}\n                        JSONOrString={this.state.JSONOrString} \n                        handleSearch={this.handleSearch}\n                        handleBuy={this.handleBuy}/>\n                </div>\n                \n                {this.state.portfolio && <PortfolioTable portfolio={this.state.portfolio}/>}\n            </div>\n        )\n    }\n}\n\nexport default PaperTrade;\n"]},"metadata":{},"sourceType":"module"}