{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/PieChart.tsx\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(ArcElement, Tooltip, Legend);\nexport function PieChart(props) {\n  const labels = () => {\n    var result = props.stocks.map(stock => {\n      return stock.symbol;\n    });\n    return result;\n  };\n\n  const stockValues = () => {\n    var result = Array();\n\n    for (let i = 0; i < props.stocks.length; i++) {\n      const stock = props.stocks[i];\n      result.push(stock.latestPrice * stock.quantity);\n    }\n\n    return result;\n  };\n\n  const data = {\n    labels: labels(),\n    datasets: [{\n      label: \"# of Votes\",\n      data: stockValues(),\n      backgroundColor: [\"rgba(255, 99, 132, 0.3)\", \"rgba(54, 162, 235, 0.3)\", \"rgba(255, 206, 86, 0.3)\", \"rgba(75, 192, 192, 0.3)\", \"rgba(153, 102, 255, 0.3)\", \"rgba(255, 159, 64, 0.3)\"],\n      borderColor: [\"rgba(255, 99, 132, 1)\", \"rgba(54, 162, 235, 1)\", \"rgba(255, 206, 86, 1)\", \"rgba(75, 192, 192, 1)\", \"rgba(153, 102, 255, 1)\", \"rgba(255, 159, 64, 1)\"],\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"component\",\n    children: /*#__PURE__*/_jsxDEV(Doughnut, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_c = PieChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/PieChart.tsx"],"names":["Doughnut","Chart","ChartJS","ArcElement","Tooltip","Legend","register","PieChart","props","labels","result","stocks","map","stock","symbol","stockValues","Array","i","length","push","latestPrice","quantity","data","datasets","label","backgroundColor","borderColor","borderWidth"],"mappings":";AACA,SAASA,QAAT,QAAyB,iBAAzB;AAEA,SAASC,KAAK,IAAIC,OAAlB,EAA2BC,UAA3B,EAAuCC,OAAvC,EAAgDC,MAAhD,QAA8D,UAA9D;;AAOAH,OAAO,CAACI,QAAR,CAAiBH,UAAjB,EAA6BC,OAA7B,EAAsCC,MAAtC;AAEA,OAAO,SAASE,QAAT,CAAkBC,KAAlB,EAAsD;AAC3D,QAAMC,MAAM,GAAG,MAAqB;AAClC,QAAIC,MAAM,GAAGF,KAAK,CAACG,MAAN,CAAaC,GAAb,CAAkBC,KAAD,IAAW;AACvC,aAAOA,KAAK,CAACC,MAAb;AACD,KAFY,CAAb;AAGA,WAAOJ,MAAP;AACD,GALD;;AAOA,QAAMK,WAAW,GAAG,MAAqB;AACvC,QAAIL,MAAqB,GAAGM,KAAK,EAAjC;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,KAAK,CAACG,MAAN,CAAaO,MAAjC,EAAyCD,CAAC,EAA1C,EAA8C;AAC5C,YAAMJ,KAAK,GAAGL,KAAK,CAACG,MAAN,CAAaM,CAAb,CAAd;AACAP,MAAAA,MAAM,CAACS,IAAP,CAAYN,KAAK,CAACO,WAAN,GAAoBP,KAAK,CAACQ,QAAtC;AACD;;AACD,WAAOX,MAAP;AACD,GAPD;;AAQA,QAAMY,IAAI,GAAG;AACXb,IAAAA,MAAM,EAAEA,MAAM,EADH;AAEXc,IAAAA,QAAQ,EAAE,CACR;AACEC,MAAAA,KAAK,EAAE,YADT;AAEEF,MAAAA,IAAI,EAAEP,WAAW,EAFnB;AAGEU,MAAAA,eAAe,EAAE,CACf,yBADe,EAEf,yBAFe,EAGf,yBAHe,EAIf,yBAJe,EAKf,0BALe,EAMf,yBANe,CAHnB;AAWEC,MAAAA,WAAW,EAAE,CACX,uBADW,EAEX,uBAFW,EAGX,uBAHW,EAIX,uBAJW,EAKX,wBALW,EAMX,uBANW,CAXf;AAmBEC,MAAAA,WAAW,EAAE;AAnBf,KADQ;AAFC,GAAb;AA2BA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEL;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;KAhDef,Q","sourcesContent":["import { ReactElement, useState } from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { Portfolio, Stock } from \"./interfaces\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\n\ninterface PieChartProps {\n  portfolio: Portfolio;\n  stocks: Stock[];\n}\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nexport function PieChart(props: PieChartProps): ReactElement {\n  const labels = (): Array<String> => {\n    var result = props.stocks.map((stock) => {\n      return stock.symbol;\n    });\n    return result;\n  };\n\n  const stockValues = (): Array<Number> => {\n    var result: Array<Number> = Array<Number>();\n    for (let i = 0; i < props.stocks.length; i++) {\n      const stock = props.stocks[i];\n      result.push(stock.latestPrice * stock.quantity);\n    }\n    return result;\n  };\n  const data = {\n    labels: labels(),\n    datasets: [\n      {\n        label: \"# of Votes\",\n        data: stockValues(),\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.3)\",\n          \"rgba(54, 162, 235, 0.3)\",\n          \"rgba(255, 206, 86, 0.3)\",\n          \"rgba(75, 192, 192, 0.3)\",\n          \"rgba(153, 102, 255, 0.3)\",\n          \"rgba(255, 159, 64, 0.3)\",\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\",\n          \"rgba(54, 162, 235, 1)\",\n          \"rgba(255, 206, 86, 1)\",\n          \"rgba(75, 192, 192, 1)\",\n          \"rgba(153, 102, 255, 1)\",\n          \"rgba(255, 159, 64, 1)\",\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  return (\n    <div className=\"component\">\n      <Doughnut data={data} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}