{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/recordList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Stock = props => /*#__PURE__*/_jsxDEV(\"tr\", {\n  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.stock.symbol\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 4\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: props.stock.quantity\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 4\n  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-link\",\n      to: `/edit/${props.stock._id}`,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 6\n    }, this), \" |\", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-link\",\n      onClick: () => {\n        props.deleteStock(props.stock._id);\n      },\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 4\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 2\n}, this);\n\n_c = Stock;\nexport default function StockList() {\n  _s();\n\n  const [stocks, setStocks] = useState([]); // This method fetches the stocks from the database.\n\n  useEffect(() => {\n    async function getStocks() {\n      const response = await fetch(`http://localhost:5000/stocks/`);\n\n      if (!response.ok) {\n        const message = `An error occured: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const records = await response.json();\n      setRecords(records);\n    }\n\n    getRecords();\n    return;\n  }, [records.length]); // This method will delete a record\n\n  async function deleteRecord(id) {\n    await fetch(`http://localhost:5000/${id}`, {\n      method: \"DELETE\"\n    });\n    const newRecords = records.filter(el => el._id !== id);\n    setRecords(newRecords);\n  } // This method will map out the records on the table\n\n\n  function recordList() {\n    return records.map(record => {\n      return /*#__PURE__*/_jsxDEV(Record, {\n        record: record,\n        deleteRecord: () => deleteRecord(record._id)\n      }, record._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 8\n      }, this);\n    });\n  } // This following section will display the table with the records of individuals.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Record List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      style: {\n        marginTop: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Position\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: recordList()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 4\n  }, this);\n}\n\n_s(StockList, \"ckkB5iKANHozGm/BUdCimNAdz7k=\");\n\n_c2 = StockList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Stock\");\n$RefreshReg$(_c2, \"StockList\");","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/recordList.js"],"names":["React","useEffect","useState","Link","Stock","props","stock","symbol","quantity","_id","deleteStock","StockList","stocks","setStocks","getStocks","response","fetch","ok","message","statusText","window","alert","records","json","setRecords","getRecords","length","deleteRecord","id","method","newRecords","filter","el","recordList","map","record","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n \nconst Stock = (props) => (\n <tr>\n   <td>{props.stock.symbol}</td>\n   <td>{props.stock.quantity}</td>\n   <td>\n     <Link className=\"btn btn-link\" to={`/edit/${props.stock._id}`}>Edit</Link> |\n     <button className=\"btn btn-link\"\n       onClick={() => {\n         props.deleteStock(props.stock._id);\n       }}\n     >\n       Delete\n     </button>\n   </td>\n </tr>\n);\n \nexport default function StockList() {\n const [stocks, setStocks] = useState([]);\n \n // This method fetches the stocks from the database.\n useEffect(() => {\n   async function getStocks() {\n     const response = await fetch(`http://localhost:5000/stocks/`);\n \n     if (!response.ok) {\n       const message = `An error occured: ${response.statusText}`;\n       window.alert(message);\n       return;\n     }\n \n     const records = await response.json();\n     setRecords(records);\n   }\n \n   getRecords();\n \n   return;\n }, [records.length]);\n \n // This method will delete a record\n async function deleteRecord(id) {\n   await fetch(`http://localhost:5000/${id}`, {\n     method: \"DELETE\"\n   });\n \n   const newRecords = records.filter((el) => el._id !== id);\n   setRecords(newRecords);\n }\n \n // This method will map out the records on the table\n function recordList() {\n   return records.map((record) => {\n     return (\n       <Record\n         record={record}\n         deleteRecord={() => deleteRecord(record._id)}\n         key={record._id}\n       />\n     );\n   });\n }\n \n // This following section will display the table with the records of individuals.\n return (\n   <div>\n     <h3>Record List</h3>\n     <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n       <thead>\n         <tr>\n           <th>Name</th>\n           <th>Position</th>\n           <th>Level</th>\n           <th>Action</th>\n         </tr>\n       </thead>\n       <tbody>{recordList()}</tbody>\n     </table>\n   </div>\n );\n}"]},"metadata":{},"sourceType":"module"}