{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/OwnedStocksList.tsx\",\n    _s = $RefreshSig$();\n\nimport { useLayoutEffect, useState } from \"react\";\nimport { getStockLatestPrice } from \"../helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StockRow(props) {\n  _s();\n\n  const [latestPrice, setLatestPrice] = useState(0);\n  const [latestPriceFontColor, setLatestPriceFontColor] = useState(\"black\"); // useInterval(() => {\n  //   getStockLatestPrice(props.stock.symbol).then((newLatestPrice) => {\n  //     setLatestPrice(newLatestPrice);\n  //     // must use new price as setState hook is async\n  //     if (newLatestPrice > latestPrice) {\n  //       setLatestPriceFontColor(\"green\");\n  //     } else {\n  //       setLatestPriceFontColor(\"red\");\n  //     }\n  //   });\n  // }, 5000);\n  //initial price, runs once\n\n  useLayoutEffect(() => {\n    getStockLatestPrice(props.stock.symbol).then(newLatestPrice => {\n      setLatestPrice(newLatestPrice);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.stock.symbol\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      style: {\n        color: latestPriceFontColor\n      },\n      children: latestPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.stock.quantity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: props.stock.pricePurchased\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: +(latestPrice * props.stock.quantity).toFixed(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: +(latestPrice * props.stock.quantity - props.stock.pricePurchased * props.stock.quantity).toFixed(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StockRow, \"sutdZlS3ejS7CnL3jOy3knTy+yE=\");\n\n_c = StockRow;\nexport default function OwnedStockList(props) {\n  // This method will map out the records on the table\n  const StocksToTable = stockList => {\n    return stockList.map(stock => /*#__PURE__*/_jsxDEV(StockRow, {\n      stock: stock // deleteStock={() => deleteStock(stock._id)}\n\n    }, stock.symbol, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this));\n  }; // This following section will display the table with the records of individuals.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"component\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Your Stocks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Symbol\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Latest Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Price Purchased\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Net Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: StocksToTable(props.stocks)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_c2 = OwnedStockList;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"StockRow\");\n$RefreshReg$(_c2, \"OwnedStockList\");","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/components/OwnedStocksList.tsx"],"names":["useLayoutEffect","useState","getStockLatestPrice","StockRow","props","latestPrice","setLatestPrice","latestPriceFontColor","setLatestPriceFontColor","stock","symbol","then","newLatestPrice","color","quantity","pricePurchased","toFixed","OwnedStockList","StocksToTable","stockList","map","stocks"],"mappings":"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","sourcesContent":["import { useLayoutEffect, useState } from \"react\";\nimport { getStockLatestPrice, useInterval } from \"../helpers\";\nimport { Stock } from \"../interfaces\";\n\ninterface stockRowProps {\n  stock: Stock;\n}\n\nfunction StockRow(props: stockRowProps) {\n  const [latestPrice, setLatestPrice] = useState(0);\n  const [latestPriceFontColor, setLatestPriceFontColor] = useState(\"black\");\n\n  // useInterval(() => {\n  //   getStockLatestPrice(props.stock.symbol).then((newLatestPrice) => {\n  //     setLatestPrice(newLatestPrice);\n  //     // must use new price as setState hook is async\n  //     if (newLatestPrice > latestPrice) {\n  //       setLatestPriceFontColor(\"green\");\n  //     } else {\n  //       setLatestPriceFontColor(\"red\");\n  //     }\n  //   });\n  // }, 5000);\n\n  //initial price, runs once\n  useLayoutEffect(() => {\n    getStockLatestPrice(props.stock.symbol).then((newLatestPrice) => {\n      setLatestPrice(newLatestPrice);\n    });\n  }, []);\n\n  return (\n    <tr>\n      <td>{props.stock.symbol}</td>\n      <td style={{ color: latestPriceFontColor }}>{latestPrice}</td>\n      <td>{props.stock.quantity}</td>\n      <td>{props.stock.pricePurchased}</td>\n      <td>{+(latestPrice * props.stock.quantity).toFixed(2)}</td>\n      <td>\n        {\n          +(\n            latestPrice * props.stock.quantity -\n            props.stock.pricePurchased * props.stock.quantity\n          ).toFixed(2)\n        }\n      </td>\n    </tr>\n  );\n}\n\ninterface stockListProps {\n  stocks: Stock[];\n}\nexport default function OwnedStockList(props: stockListProps) {\n  // This method will map out the records on the table\n  const StocksToTable = (stockList: Stock[]) => {\n    return stockList.map((stock) => (\n      <StockRow\n        stock={stock}\n        // deleteStock={() => deleteStock(stock._id)}\n        key={stock.symbol}\n      />\n    ));\n  };\n\n  // This following section will display the table with the records of individuals.\n  return (\n    <div className=\"component\">\n      <h3>Your Stocks</h3>\n      <table>\n        <thead>\n          <tr>\n            <th>Symbol</th>\n            <th>Latest Price</th>\n            <th>Quantity</th>\n            <th>Price Purchased</th>\n            <th>Value</th>\n            <th>Net Value</th>\n          </tr>\n        </thead>\n        <tbody>{StocksToTable(props.stocks)}</tbody>\n      </table>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}