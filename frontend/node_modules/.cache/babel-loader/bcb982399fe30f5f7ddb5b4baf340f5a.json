{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paper-trade-tsx/src/forms/BuyAndSellForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { getStockIndex } from \"../helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultFormData = {\n  quantity: \"100\"\n};\n\nfunction BuyAndSellForm(props) {\n  _s();\n\n  const [formData, setFormData] = useState(defaultFormData);\n  const {\n    quantity\n  } = formData;\n  const [cost, setCost] = useState(parseInt(quantity) * props.stockJSON.latestPrice);\n  const [message, setMessage] = useState(\"asdfasdfas\");\n\n  const alreadyOwn = () => {\n    if (getStockIndex(props.portfolio, props.stockJSON) !== -1) {\n      setMessage(\"You already own this stock!\");\n    }\n  };\n\n  const onChange = e => {\n    setFormData(prevState => ({ ...prevState,\n      [e.target.id]: e.target.value\n    }));\n    setCost(parseInt(e.target.value) * props.stockJSON.latestPrice);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); //add stock to the portfolio\n    //subtract cash from the portfolio\n\n    props.handleBuy(cost, parseInt(quantity), props.stockJSON);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"BuyForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"quantity\",\n        children: \"Quantity: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"quantity\",\n        defaultValue: \"100\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        name: \"buyButton\",\n        value: \"Buy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        name: \"sellButton\",\n        value: \"Sell\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Cost: \", cost ? cost.toFixed(2) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), message]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BuyAndSellForm, \"fcKCB7FBh7Jaumyxt/IooEiNJr0=\");\n\n_c = BuyAndSellForm;\nexport default BuyAndSellForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BuyAndSellForm\");","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paper-trade-tsx/src/forms/BuyAndSellForm.tsx"],"names":["React","useState","getStockIndex","defaultFormData","quantity","BuyAndSellForm","props","formData","setFormData","cost","setCost","parseInt","stockJSON","latestPrice","message","setMessage","alreadyOwn","portfolio","onChange","e","prevState","target","id","value","onSubmit","preventDefault","handleBuy","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,IAA8BC,QAA9B,QAA8C,OAA9C;AACA,SAASC,aAAT,QAA8B,YAA9B;;AASA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,QAAQ,EAAE;AADU,CAAxB;;AAIA,SAASC,cAAT,CAAwBC,KAAxB,EAAkE;AAAA;;AAE9D,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAACE,eAAD,CAAxC;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAeG,QAArB;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAACU,QAAQ,CAACP,QAAD,CAAR,GAAmBE,KAAK,CAACM,SAAN,CAAgBC,WAApC,CAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,YAAD,CAAtC;;AAEA,QAAMe,UAAU,GAAG,MAAM;AACrB,QAAId,aAAa,CAACI,KAAK,CAACW,SAAP,EAAkBX,KAAK,CAACM,SAAxB,CAAb,KAAoD,CAAC,CAAzD,EAA4D;AACxDG,MAAAA,UAAU,CAAC,6BAAD,CAAV;AACH;AACJ,GAJD;;AAQA,QAAMG,QAAQ,GAAIC,CAAD,IAA4C;AACzDX,IAAAA,WAAW,CAAEY,SAAD,KAAgB,EAC5B,GAAGA,SADyB;AAE5B,OAACD,CAAC,CAACE,MAAF,CAASC,EAAV,GAAeH,CAAC,CAACE,MAAF,CAASE;AAFI,KAAhB,CAAD,CAAX;AAIAb,IAAAA,OAAO,CAACC,QAAQ,CAACQ,CAAC,CAACE,MAAF,CAASE,KAAV,CAAR,GAAyBjB,KAAK,CAACM,SAAN,CAAgBC,WAA1C,CAAP;AACH,GAND;;AAQA,QAAMW,QAAQ,GAAIL,CAAD,IAAyC;AACtDA,IAAAA,CAAC,CAACM,cAAF,GADsD,CAEtD;AACA;;AACAnB,IAAAA,KAAK,CAACoB,SAAN,CAAgBjB,IAAhB,EAAsBE,QAAQ,CAACP,QAAD,CAA9B,EAA0CE,KAAK,CAACM,SAAhD;AAEH,GAND;;AAQA,sBACI;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAEY,QAAhB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,UAAtB;AAAiC,QAAA,YAAY,EAAC,KAA9C;AAAoD,QAAA,QAAQ,EAAEN;AAA9D;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,WAA1B;AAAsC,QAAA,KAAK,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,IAAI,EAAC,YAA1B;AAAuC,QAAA,KAAK,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AAAA,2BAAUT,IAAI,GAAGA,IAAI,CAACkB,OAAL,CAAa,CAAb,CAAH,GAAqB,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,EAQKb,OARL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GA5CQT,c;;KAAAA,c;AAgDT,eAAeA,cAAf","sourcesContent":["import React, { ReactElement, useState } from \"react\";\nimport { getStockIndex } from \"../helpers\";\nimport { IRootObject, Portfolio } from \"../interfaces\";\n\ninterface BuyAndSellFormProps {\n    stockJSON : IRootObject\n    portfolio: Portfolio\n    handleBuy: (cost: number, quantity: number, stockJSON: IRootObject) => void\n}\n\nconst defaultFormData = {\n    quantity: \"100\",\n  };\n\nfunction BuyAndSellForm(props: BuyAndSellFormProps): ReactElement {\n\n    const [formData, setFormData] = useState(defaultFormData);\n\n    const { quantity } = formData\n    const [cost, setCost] = useState(parseInt(quantity)*props.stockJSON.latestPrice);\n    const [message, setMessage] = useState(\"asdfasdfas\")\n\n    const alreadyOwn = () => {\n        if (getStockIndex(props.portfolio, props.stockJSON) !== -1) {\n            setMessage(\"You already own this stock!\")\n        }\n    }\n\n    \n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setFormData((prevState) => ({\n        ...prevState,\n        [e.target.id]: e.target.value,\n        }));\n        setCost(parseInt(e.target.value)*props.stockJSON.latestPrice)\n    };\n\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault()\n        //add stock to the portfolio\n        //subtract cash from the portfolio\n        props.handleBuy(cost, parseInt(quantity), props.stockJSON)\n\n    }\n    \n    return(\n        <div id=\"BuyForm\">\n            <form onSubmit={onSubmit}>\n                <label htmlFor=\"quantity\">Quantity: </label>\n                <input type=\"text\" id=\"quantity\" defaultValue=\"100\" onChange={onChange}/>\n                <input type=\"submit\" name=\"buyButton\" value=\"Buy\"/>\n                <input type=\"submit\" name=\"sellButton\" value=\"Sell\"/>\n            </form>\n            <p>Cost: {cost ? cost.toFixed(2) : \"\"}</p>\n            {message}\n        </div>\n    )\n}\n\n\n\nexport default BuyAndSellForm;"]},"metadata":{},"sourceType":"module"}