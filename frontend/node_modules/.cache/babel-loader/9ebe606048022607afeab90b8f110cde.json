{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paper-trade-tsx/src/forms/BuyForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultFormData = {\n  quantity: \"100\"\n};\n\nfunction BuyForm(props) {\n  _s();\n\n  var _stringToJSONObject;\n\n  function stringToJSONObject(props) {\n    if (typeof props.JSONOrString != 'string') {\n      const stockJSON = props.JSONOrString;\n      return stockJSON;\n    }\n  }\n\n  const stockJSON = (_stringToJSONObject = stringToJSONObject(props)) !== null && _stringToJSONObject !== void 0 ? _stringToJSONObject : null;\n  const [formData, setFormData] = useState(defaultFormData);\n  const {\n    quantity\n  } = formData;\n  const [cost, setCost] = useState(parseInt(quantity) * stockJSON.latestPrice);\n\n  const onChange = e => {\n    setFormData(prevState => ({ ...prevState,\n      [e.target.id]: e.target.value\n    }));\n    setCost(parseInt(e.target.value) * props.JSON.latestPrice);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault(); //add stock to the portfolio\n    //subtract cash from the portfolio\n\n    props.portfolio.cash = props.portfolio.cash - cost;\n    console.log(props.portfolio.cash);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"BuyForm\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"quantity\",\n        children: \"Quantity: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"quantity\",\n        defaultValue: \"100\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Buy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Cost: \", cost ? cost.toFixed(2) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n\n_s(BuyForm, \"PQR2jQUF7IeeYk4lYlgjltRcO24=\");\n\n_c = BuyForm;\nexport default BuyForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BuyForm\");","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paper-trade-tsx/src/forms/BuyForm.tsx"],"names":["React","useState","defaultFormData","quantity","BuyForm","props","stringToJSONObject","JSONOrString","stockJSON","formData","setFormData","cost","setCost","parseInt","latestPrice","onChange","e","prevState","target","id","value","JSON","onSubmit","preventDefault","portfolio","cash","console","log","toFixed"],"mappings":";;;AAAA,OAAOA,KAAP,IAA8BC,QAA9B,QAA8C,OAA9C;;AAQA,MAAMC,eAAe,GAAG;AACpBC,EAAAA,QAAQ,EAAE;AADU,CAAxB;;AAIA,SAASC,OAAT,CAAiBC,KAAjB,EAAoD;AAAA;;AAAA;;AAChD,WAASC,kBAAT,CAA4BD,KAA5B,EAAiD;AAC7C,QAAI,OAAOA,KAAK,CAACE,YAAb,IAA6B,QAAjC,EAA2C;AACvC,YAAMC,SAAS,GAAGH,KAAK,CAACE,YAAxB;AACA,aAAOC,SAAP;AACH;AACJ;;AACD,QAAMA,SAA6B,0BAAGF,kBAAkB,CAACD,KAAD,CAArB,qEAAgC,IAAnE;AAEA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAACC,eAAD,CAAxC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeM,QAArB;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACY,QAAQ,CAACV,QAAD,CAAR,GAAmBK,SAAS,CAACM,WAA9B,CAAhC;;AAIA,QAAMC,QAAQ,GAAIC,CAAD,IAA4C;AACzDN,IAAAA,WAAW,CAAEO,SAAD,KAAgB,EAC5B,GAAGA,SADyB;AAE5B,OAACD,CAAC,CAACE,MAAF,CAASC,EAAV,GAAeH,CAAC,CAACE,MAAF,CAASE;AAFI,KAAhB,CAAD,CAAX;AAIAR,IAAAA,OAAO,CAACC,QAAQ,CAACG,CAAC,CAACE,MAAF,CAASE,KAAV,CAAR,GAAyBf,KAAK,CAACgB,IAAN,CAAWP,WAArC,CAAP;AACH,GAND;;AAQA,QAAMQ,QAAQ,GAAIN,CAAD,IAAyC;AACtDA,IAAAA,CAAC,CAACO,cAAF,GADsD,CAEtD;AACA;;AAEAlB,IAAAA,KAAK,CAACmB,SAAN,CAAgBC,IAAhB,GAAuBpB,KAAK,CAACmB,SAAN,CAAgBC,IAAhB,GAAuBd,IAA9C;AACAe,IAAAA,OAAO,CAACC,GAAR,CAAYtB,KAAK,CAACmB,SAAN,CAAgBC,IAA5B;AAGH,GATD;;AAWA,sBACI;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA,4BACI;AAAM,MAAA,QAAQ,EAAEH,QAAhB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,UAAtB;AAAiC,QAAA,YAAY,EAAC,KAA9C;AAAoD,QAAA,QAAQ,EAAEP;AAA9D;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI;AAAA,2BAAUJ,IAAI,GAAGA,IAAI,CAACiB,OAAL,CAAa,CAAb,CAAH,GAAqB,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA5CQxB,O;;KAAAA,O;AAgDT,eAAeA,OAAf","sourcesContent":["import React, { ReactElement, useState } from \"react\";\nimport { IRootObject, Portfolio } from \"../interfaces\";\n\ninterface BuyFormProps {\n    JSONOrString : IRootObject | string\n    portfolio: Portfolio\n}\n\nconst defaultFormData = {\n    quantity: \"100\",\n  };\n\nfunction BuyForm(props: BuyFormProps): ReactElement {\n    function stringToJSONObject(props: BuyFormProps) {\n        if (typeof props.JSONOrString != 'string') {\n            const stockJSON = props.JSONOrString as IRootObject\n            return stockJSON\n        }\n    }\n    const stockJSON: IRootObject | null = stringToJSONObject(props) ?? null\n\n    const [formData, setFormData] = useState(defaultFormData);\n    const { quantity } = formData\n    const [cost, setCost] = useState(parseInt(quantity)*stockJSON.latestPrice);\n\n    \n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setFormData((prevState) => ({\n        ...prevState,\n        [e.target.id]: e.target.value,\n        }));\n        setCost(parseInt(e.target.value)*props.JSON.latestPrice)\n    };\n\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault()\n        //add stock to the portfolio\n        //subtract cash from the portfolio\n        \n        props.portfolio.cash = props.portfolio.cash - cost\n        console.log(props.portfolio.cash)\n\n\n    }\n    \n    return(\n        <div id=\"BuyForm\">\n            <form onSubmit={onSubmit}>\n                <label htmlFor=\"quantity\">Quantity: </label>\n                <input type=\"text\" id=\"quantity\" defaultValue=\"100\" onChange={onChange}/>\n                <input type=\"submit\" value=\"Buy\"/>\n            </form>\n            <p>Cost: {cost ? cost.toFixed(2) : \"\"}</p>\n        </div>\n    )\n}\n\n\n\nexport default BuyForm;"]},"metadata":{},"sourceType":"module"}