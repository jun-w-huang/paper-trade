{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/PaperTrade.tsx\";\nimport React from 'react';\nimport \"./PaperTrade.css\";\nimport SearchForm from './components/forms/SearchForm';\nimport PortfolioDetails from './PortfolioDetails';\nimport { Route, Routes } from \"react-router-dom\";\nimport Edit from \"./components/edit\";\nimport StockList from './components/stockList';\nimport { getThisUserJSON, getThisUserStocks } from './helpers';\nimport Header from './components/header'; // const defaultPortfolio =  {\n//     name: \"Tech Stocks\",\n//     cash: 1000000,\n//     // stocks: [{\n//     //     symbol: \"AAPL\",\n//     //     latestPrice: 132.32,\n//     //     quantity: 200,\n//     //     pricePurchased: 110.23,\n//     // },\n//     // {\n//     //     symbol: \"AMZN\",\n//     //     latestPrice: 3456.32,\n//     //     quantity: 100,\n//     //     pricePurchased: 2342.32,\n//     // }]\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PaperTrade extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      portfolio: this.props.userJSON.portfolio,\n      userJSON: this.props.userJSON,\n      stocks: this.props.userJSON.stocks,\n      JSONOrString: \"\",\n      stockJSON: undefined\n    };\n  }\n\n  componentDidMount() {\n    // console.log(\"papertrade mounted\")\n    // this.getStocks()\n    getThisUserJSON(this.state.userJSON._id.$oid).then(user => {\n      if (typeof user === 'object') {// console.log(`component gets user as ${user}`)\n        // console.log(`user's username is ${user._id}`)\n        // const state = {\n        //     portfolio: user.portfolio,\n        //     userJSON: user,\n        // }\n        // this.setState({\n        //     portfolio: \n        // })\n      }\n    }); // this.getUsername()\n  }\n\n  // This method fetches the stocks from the database.\n  setStocks() {\n    getThisUserStocks(this.state.userJSON._id.$oid).then(stocks => {\n      if (stocks) {\n        this.setState({\n          stocks: stocks\n        });\n      }\n    });\n  }\n\n  handleSearch(JSONOrString) {\n    if (typeof JSONOrString === 'string') {\n      this.setState({\n        JSONOrString: JSONOrString,\n        stockJSON: undefined\n      });\n    } else {\n      this.setState({\n        JSONOrString: JSONOrString,\n        stockJSON: JSONOrString\n      });\n    }\n  } // async handleBuy(cost: number, quantity: number, stockJSON: IRootObject) {\n  //     const portfolio = this.state.portfolio\n  //     const newStock = {\n  //         symbol: stockJSON.symbol,\n  //         quantity: quantity,\n  //         pricePurchased: stockJSON.latestPrice,\n  //     }\n  //     console.log(newStock)\n  // check sufficient cash\n  // if (portfolio.cash > cost) {\n  //     portfolio.cash = portfolio.cash - cost;\n  //     await fetch(\"http://localhost:5000/stocks/add\", {\n  //         method: \"POST\",\n  //         headers: {\n  //         \"Content-Type\": \"application/json\",\n  //         },\n  //         body: JSON.stringify(newStock),\n  //     })\n  //     .then(foo => {\n  //         this.setStocks()\n  //     })\n  //     .catch(error => {\n  //         window.alert(error);\n  //         return;\n  //     });\n  // }\n  // }\n\n\n  render() {\n    this.handleSearch = this.handleSearch.bind(this); // this.handleBuy = this.handleBuy.bind(this)\n    // this.getStocks()\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        username: this.state.userJSON.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PortfolioDetails, {\n        portfolio: this.state.portfolio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"forms\",\n        children: /*#__PURE__*/_jsxDEV(SearchForm, {\n          userJSON: this.state.userJSON,\n          portfolio: this.state.portfolio,\n          JSONOrString: this.state.JSONOrString,\n          handleSearch: this.handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/edit/:id\",\n          element: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(StockList, {\n            stocks: this.state.stocks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PaperTrade;","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/PaperTrade.tsx"],"names":["React","SearchForm","PortfolioDetails","Route","Routes","Edit","StockList","getThisUserJSON","getThisUserStocks","Header","PaperTrade","Component","state","portfolio","props","userJSON","stocks","JSONOrString","stockJSON","undefined","componentDidMount","_id","$oid","then","user","setStocks","setState","handleSearch","render","bind","username"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,kBAAP;AAEA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AAEA,SAASC,KAAT,EAAgBC,MAAhB,QAAyC,kBAAzC;AAEA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAASC,eAAT,EAA0BC,iBAA1B,QAAmD,WAAnD;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAaA,MAAMC,UAAN,SAAyBV,KAAK,CAACW,SAA/B,CAA2E;AAAA;AAAA;AAAA,SACvEC,KADuE,GACjE;AACFC,MAAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC,QAAX,CAAoBF,SAD7B;AAEFE,MAAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWC,QAFnB;AAGFC,MAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWC,QAAX,CAAoBC,MAH1B;AAIFC,MAAAA,YAAY,EAAE,EAJZ;AAKFC,MAAAA,SAAS,EAAEC;AALT,KADiE;AAAA;;AASvEC,EAAAA,iBAAiB,GAAG;AAChB;AACA;AACAb,IAAAA,eAAe,CAAC,KAAKK,KAAL,CAAWG,QAAX,CAAoBM,GAApB,CAAwBC,IAAzB,CAAf,CAA8CC,IAA9C,CAAoDC,IAAD,IAAU;AACzD,UAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B,CAC1B;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACH;AACJ,KAdD,EAHgB,CAkBhB;AACH;;AAED;AACAC,EAAAA,SAAS,GAAG;AACRjB,IAAAA,iBAAiB,CAAC,KAAKI,KAAL,CAAWG,QAAX,CAAoBM,GAApB,CAAwBC,IAAzB,CAAjB,CAAgDC,IAAhD,CAAsDP,MAAD,IAAY;AAC7D,UAAIA,MAAJ,EAAY;AACR,aAAKU,QAAL,CAAc;AACVV,UAAAA,MAAM,EAAEA;AADE,SAAd;AAGH;AACJ,KAND;AAOH;;AAGDW,EAAAA,YAAY,CAACV,YAAD,EAAqC;AAC7C,QAAI,OAAOA,YAAP,KAAwB,QAA5B,EAAsC;AAClC,WAAKS,QAAL,CAAc;AACVT,QAAAA,YAAY,EAAEA,YADJ;AAEVC,QAAAA,SAAS,EAAEC;AAFD,OAAd;AAIH,KALD,MAKO;AACH,WAAKO,QAAL,CAAc;AACVT,QAAAA,YAAY,EAAEA,YADJ;AAEVC,QAAAA,SAAS,EAAED;AAFD,OAAd;AAIH;AACJ,GAtDsE,CAwDvE;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAOI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACJ;;;AAEAW,EAAAA,MAAM,GAAG;AACL,SAAKD,YAAL,GAAoB,KAAKA,YAAL,CAAkBE,IAAlB,CAAuB,IAAvB,CAApB,CADK,CAEL;AACA;;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,KAAKjB,KAAL,CAAWG,QAAX,CAAoBe;AAAtC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,gBAAD;AAAkB,QAAA,SAAS,EAAE,KAAKlB,KAAL,CAAWC;AAAxC;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,EAAE,EAAC,OAAR;AAAA,+BACI,QAAC,UAAD;AACI,UAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWG,QADzB;AAEI,UAAA,SAAS,EAAE,KAAKH,KAAL,CAAWC,SAF1B;AAGI,UAAA,YAAY,EAAE,KAAKD,KAAL,CAAWK,YAH7B;AAII,UAAA,YAAY,EAAE,KAAKU;AAJvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ,eAUI,QAAC,MAAD;AAAA,gCAIQ,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,WAAZ;AAAwB,UAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAJR,eAKI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,eAAE,QAAC,SAAD;AAAW,YAAA,MAAM,EAAE,KAAKf,KAAL,CAAWI;AAA9B;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqBH;;AAxHsE;;AA2H3E,eAAeN,UAAf","sourcesContent":["import React from 'react';\n\nimport { IRootObject, Portfolio, Stock, userJSON } from './interfaces';\nimport \"./PaperTrade.css\"\n\nimport SearchForm from './components/forms/SearchForm';\nimport PortfolioDetails from './PortfolioDetails';\n\nimport { Route, Routes, useParams } from \"react-router-dom\";\n\nimport Edit from \"./components/edit\";\nimport StockList from './components/stockList';\nimport { getThisUserJSON, getThisUserStocks } from './helpers';\nimport Header from './components/header';\n\n\n// const defaultPortfolio =  {\n//     name: \"Tech Stocks\",\n//     cash: 1000000,\n//     // stocks: [{\n//     //     symbol: \"AAPL\",\n//     //     latestPrice: 132.32,\n//     //     quantity: 200,\n//     //     pricePurchased: 110.23,\n//     // },\n//     // {\n//     //     symbol: \"AMZN\",\n//     //     latestPrice: 3456.32,\n//     //     quantity: 100,\n//     //     pricePurchased: 2342.32,\n//     // }]\n// }\n\ntype PaperTradeProps = {\n    userJSON: userJSON\n}\ntype PaperTradeState = {\n    portfolio: Portfolio\n    userJSON: userJSON\n    stocks: Stock[]\n    JSONOrString: IRootObject | string\n    stockJSON?: IRootObject\n}\n\nclass PaperTrade extends React.Component<PaperTradeProps, PaperTradeState> {\n    state={\n        portfolio: this.props.userJSON.portfolio,\n        userJSON: this.props.userJSON,\n        stocks: this.props.userJSON.stocks,\n        JSONOrString: \"\",\n        stockJSON: undefined,\n    }\n\n    componentDidMount() {\n        // console.log(\"papertrade mounted\")\n        // this.getStocks()\n        getThisUserJSON(this.state.userJSON._id.$oid).then((user) => {\n            if (typeof user === 'object') {\n                // console.log(`component gets user as ${user}`)\n                // console.log(`user's username is ${user._id}`)\n                // const state = {\n                //     portfolio: user.portfolio,\n                //     userJSON: user,\n\n\n                // }\n                // this.setState({\n                //     portfolio: \n                // })\n            }\n        })\n        // this.getUsername()\n    };\n \n    // This method fetches the stocks from the database.\n    setStocks() { \n        getThisUserStocks(this.state.userJSON._id.$oid).then((stocks) => {\n            if (stocks) {\n                this.setState({\n                    stocks: stocks,\n                });\n            }\n        })\n    };\n    \n\n    handleSearch(JSONOrString: IRootObject | string) {\n        if (typeof JSONOrString === 'string') {\n            this.setState({\n                JSONOrString: JSONOrString,\n                stockJSON: undefined,\n            })\n        } else {\n            this.setState({\n                JSONOrString: JSONOrString,\n                stockJSON: JSONOrString\n            });\n        }\n    }\n\n    // async handleBuy(cost: number, quantity: number, stockJSON: IRootObject) {\n\n    //     const portfolio = this.state.portfolio\n\n    //     const newStock = {\n    //         symbol: stockJSON.symbol,\n    //         quantity: quantity,\n    //         pricePurchased: stockJSON.latestPrice,\n    //     }\n\n    //     console.log(newStock)\n\n        \n        \n\n        \n\n        // check sufficient cash\n        // if (portfolio.cash > cost) {\n        //     portfolio.cash = portfolio.cash - cost;\n        //     await fetch(\"http://localhost:5000/stocks/add\", {\n        //         method: \"POST\",\n        //         headers: {\n        //         \"Content-Type\": \"application/json\",\n        //         },\n        //         body: JSON.stringify(newStock),\n        //     })\n        //     .then(foo => {\n        //         this.setStocks()\n        //     })\n        //     .catch(error => {\n        //         window.alert(error);\n        //         return;\n        //     });\n            \n        // }\n    // }\n\n    render() {\n        this.handleSearch = this.handleSearch.bind(this)\n        // this.handleBuy = this.handleBuy.bind(this)\n        // this.getStocks()\n\n        return(\n            <div className=\"container\">\n                <Header username={this.state.userJSON.username}/>\n                <PortfolioDetails portfolio={this.state.portfolio}/>\n                <div id=\"forms\">\n                    <SearchForm \n                        userJSON={this.state.userJSON}\n                        portfolio={this.state.portfolio}\n                        JSONOrString={this.state.JSONOrString} \n                        handleSearch={this.handleSearch}/>\n                </div>\n                <Routes>\n                    {/* <Navbar />\n                    <Route path=\"/edit/:id\" element={<Edit />} />\n                        <Route path=\"/create\" element={<Create />} /> */}\n                        <Route path=\"/edit/:id\" element={<Edit />} />\n                    <Route path=\"/\" element={<StockList stocks={this.state.stocks}/>} />\n                </Routes>\n                {/* {this.state.portfolio && <PortfolioTable portfolio={this.state.portfolio}/>} */}\n            </div>\n        )\n    }\n}\n\nexport default PaperTrade;\n"]},"metadata":{},"sourceType":"module"}