{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/PaperTrade.tsx\";\nimport React from 'react';\nimport \"./PaperTrade.css\";\nimport SearchForm from './components/forms/SearchForm';\nimport PortfolioDetails from './PortfolioDetails';\nimport { Route, Routes } from \"react-router-dom\";\nimport StockList from './components/stockList';\nimport { getThisUserJSON } from './helpers';\nimport Header from './components/header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PaperTrade extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.initialState = {\n      userID: this.props.userID,\n      userJSON: {\n        \"_id\": {\n          \"$oid\": \"\"\n        },\n        \"username\": \"\",\n        \"password\": \"\",\n        \"portfolio\": {\n          \"name\": \"\",\n          \"cash\": 0\n        },\n        \"stocks\": []\n      },\n      JSONOrString: \"\",\n      stockJSON: undefined\n    };\n    this.state = this.initialState;\n  }\n\n  componentDidMount() {\n    // console.log(\"papertrade mounted\")\n    getThisUserJSON(this.props.userID._id.$oid).then(userJSON => {\n      if (userJSON) {\n        // console.log(`component gets user as ${user}`)\n        // console.log(`user's username is ${user._id}`)\n        this.setState({\n          userJSON: userJSON\n        });\n      }\n    });\n  }\n\n  // componentDidUpdate() {\n  //     getThisUserJSON(this.props.userID._id.$oid).then((userJSON) => {\n  //         if (userJSON) {\n  //             this.setState({\n  //                 userJSON: userJSON,\n  //             })\n  //         }\n  //     })\n  // };\n  handleSearch(JSONOrString) {\n    if (typeof JSONOrString === 'string') {\n      this.setState({\n        JSONOrString: JSONOrString,\n        stockJSON: undefined\n      });\n    } else {\n      this.setState({\n        JSONOrString: JSONOrString,\n        stockJSON: JSONOrString\n      });\n    }\n  }\n\n  render() {\n    this.handleSearch = this.handleSearch.bind(this); // this.handleBuy = this.handleBuy.bind(this)\n    // this.getStocks()\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        username: this.state.userJSON.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PortfolioDetails, {\n        portfolio: this.state.userJSON.portfolio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"forms\",\n        children: /*#__PURE__*/_jsxDEV(SearchForm, {\n          userJSON: this.state.userJSON,\n          JSONOrString: this.state.JSONOrString,\n          handleSearch: this.handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(StockList, {\n            stocks: this.state.userJSON.stocks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PaperTrade;","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/PaperTrade.tsx"],"names":["React","SearchForm","PortfolioDetails","Route","Routes","StockList","getThisUserJSON","Header","PaperTrade","Component","initialState","userID","props","userJSON","JSONOrString","stockJSON","undefined","state","componentDidMount","_id","$oid","then","setState","handleSearch","render","bind","username","portfolio","stocks"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { IRootObject, userID, userJSON } from './interfaces';\nimport \"./PaperTrade.css\"\n\nimport SearchForm from './components/forms/SearchForm';\nimport PortfolioDetails from './PortfolioDetails';\n\nimport { Route, Routes } from \"react-router-dom\";\n\nimport StockList from './components/stockList';\nimport { getThisUserJSON } from './helpers';\nimport Header from './components/header';\n\ntype PaperTradeProps = {\n    userID: userID\n}\ntype PaperTradeState = {\n    userID: userID,\n    userJSON?: userJSON\n    JSONOrString: IRootObject | string\n    stockJSON?: IRootObject\n}\n\nclass PaperTrade extends React.Component<PaperTradeProps, PaperTradeState> {\n\n    initialState = {\n        userID: this.props.userID,\n        userJSON: {\n            \"_id\": {\n                \"$oid\": \"\"\n            },\n            \"username\": \"\",\n            \"password\": \"\",\n            \"portfolio\": {\n                \"name\": \"\",\n                \"cash\": 0\n            },\n            \"stocks\": []\n        },\n        JSONOrString: \"\",\n        stockJSON: undefined,\n    }\n    state = this.initialState;\n    \n\n    componentDidMount() {\n        // console.log(\"papertrade mounted\")\n        getThisUserJSON(this.props.userID._id.$oid).then((userJSON) => {\n            if (userJSON) {\n                // console.log(`component gets user as ${user}`)\n                // console.log(`user's username is ${user._id}`)\n                this.setState({\n                    userJSON: userJSON,\n                })\n            }\n        })\n    };\n\n    // componentDidUpdate() {\n    //     getThisUserJSON(this.props.userID._id.$oid).then((userJSON) => {\n    //         if (userJSON) {\n    //             this.setState({\n    //                 userJSON: userJSON,\n    //             })\n    //         }\n    //     })\n    // };\n\n    handleSearch(JSONOrString: IRootObject | string) {\n        if (typeof JSONOrString === 'string') {\n            this.setState({\n                JSONOrString: JSONOrString,\n                stockJSON: undefined,\n            })\n        } else {\n            this.setState({\n                JSONOrString: JSONOrString,\n                stockJSON: JSONOrString\n            });\n        }\n    }\n\n\n    render() {\n        this.handleSearch = this.handleSearch.bind(this)\n        // this.handleBuy = this.handleBuy.bind(this)\n        // this.getStocks()\n\n        return(\n            <div className=\"container\">\n                <Header username={this.state.userJSON.username}/>\n                <PortfolioDetails portfolio={this.state.userJSON.portfolio}/>\n                <div id=\"forms\">\n                    <SearchForm \n                        userJSON={this.state.userJSON}\n                        JSONOrString={this.state.JSONOrString} \n                        handleSearch={this.handleSearch}\n                    />\n                </div>\n                <Routes>\n                    <Route path=\"/\" element={<StockList stocks={this.state.userJSON.stocks}/>} />\n                </Routes>\n            </div>\n        )\n    }\n}\n\nexport default PaperTrade;\n"]},"metadata":{},"sourceType":"module"}