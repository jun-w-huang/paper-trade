{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/PortfolioDetails.tsx\";\nimport { DoughnutChart } from \"./DoughnutChart\";\nimport cashSVG from \"../res/cash.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PortfolioDetails(props) {\n  const portfolioValue = () => {\n    let sumValue = props.portfolio.cash;\n\n    for (let i = 0; i < props.stocks.length; i++) {\n      let stock = props.stocks[i];\n      sumValue += stock.latestPrice * stock.quantity;\n    }\n\n    return sumValue;\n  };\n\n  const totalReturn = () => {\n    let totalReturn = (portfolioValue() - 1000000) / 1000000;\n    return totalReturn.toFixed(2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"component\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"PortfolioDetails\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"PortfolioDetails-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"PortfolioDetails-cash\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: cashSVG,\n            id: \"PortfolioDetails-cashSVG\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Cash: \", props.portfolio.cash.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n          id: \"separator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"PortfolioDetails-returns\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Value: \", portfolioValue().toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Total Return: \", totalReturn(), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pie-container\",\n        children: /*#__PURE__*/_jsxDEV(DoughnutChart, {\n          portfolio: props.portfolio,\n          stocks: props.stocks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_c = PortfolioDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioDetails\");","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/dashboard/PortfolioDetails.tsx"],"names":["DoughnutChart","cashSVG","PortfolioDetails","props","portfolioValue","sumValue","portfolio","cash","i","stocks","length","stock","latestPrice","quantity","totalReturn","toFixed"],"mappings":";AAEA,SAASA,aAAT,QAA8B,iBAA9B;AACA,OAAOC,OAAP,MAAoB,iBAApB;;AAOA,eAAe,SAASC,gBAAT,CACbC,KADa,EAEC;AACd,QAAMC,cAAc,GAAG,MAAM;AAC3B,QAAIC,QAAQ,GAAGF,KAAK,CAACG,SAAN,CAAgBC,IAA/B;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAAN,CAAaC,MAAjC,EAAyCF,CAAC,EAA1C,EAA8C;AAC5C,UAAIG,KAAK,GAAGR,KAAK,CAACM,MAAN,CAAaD,CAAb,CAAZ;AACAH,MAAAA,QAAQ,IAAIM,KAAK,CAACC,WAAN,GAAoBD,KAAK,CAACE,QAAtC;AACD;;AACD,WAAOR,QAAP;AACD,GAPD;;AASA,QAAMS,WAAW,GAAG,MAAM;AACxB,QAAIA,WAAW,GAAG,CAACV,cAAc,KAAK,OAApB,IAA+B,OAAjD;AAEA,WAAOU,WAAW,CAACC,OAAZ,CAAoB,CAApB,CAAP;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAK,MAAA,EAAE,EAAC,kBAAR;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,uBAAR;AAAA,gCACE;AAAK,UAAA,EAAE,EAAC,uBAAR;AAAA,kCAEE;AAAK,YAAA,GAAG,EAAEd,OAAV;AAAmB,YAAA,EAAE,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,iCAAUE,KAAK,CAACG,SAAN,CAAgBC,IAAhB,CAAqBQ,OAArB,CAA6B,CAA7B,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAME;AAAI,UAAA,EAAE,EAAC;AAAP;AAAA;AAAA;AAAA;AAAA,gBANF,eAOE;AAAK,UAAA,EAAE,EAAC,0BAAR;AAAA,kCACE;AAAA,wCAAiBX,cAAc,GAAGW,OAAjB,CAAyB,CAAzB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,yCAAkBD,WAAW,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAaE;AAAK,QAAA,EAAE,EAAC,eAAR;AAAA,+BACE,QAAC,aAAD;AAAe,UAAA,SAAS,EAAEX,KAAK,CAACG,SAAhC;AAA2C,UAAA,MAAM,EAAEH,KAAK,CAACM;AAAzD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;KAvCuBP,gB","sourcesContent":["import { ReactElement } from \"react\";\nimport { Portfolio, Stock } from \"./interfaces\";\nimport { DoughnutChart } from \"./DoughnutChart\";\nimport cashSVG from \"../res/cash.png\";\n\ninterface PortfolioDetailProps {\n  portfolio: Portfolio;\n  stocks: Stock[];\n}\n\nexport default function PortfolioDetails(\n  props: PortfolioDetailProps\n): ReactElement {\n  const portfolioValue = () => {\n    let sumValue = props.portfolio.cash;\n    for (let i = 0; i < props.stocks.length; i++) {\n      let stock = props.stocks[i];\n      sumValue += stock.latestPrice * stock.quantity;\n    }\n    return sumValue;\n  };\n\n  const totalReturn = () => {\n    let totalReturn = (portfolioValue() - 1000000) / 1000000;\n\n    return totalReturn.toFixed(2);\n  };\n\n  return (\n    <div className=\"component\">\n      <div id=\"PortfolioDetails\">\n        <div id=\"PortfolioDetails-text\">\n          <div id=\"PortfolioDetails-cash\">\n            {/* https://www.svgrepo.com/svg/165955/cash */}\n            <img src={cashSVG} id=\"PortfolioDetails-cashSVG\" />\n            <p>Cash: {props.portfolio.cash.toFixed(2)}</p>\n          </div>\n          <hr id=\"separator\" />\n          <div id=\"PortfolioDetails-returns\">\n            <p>Total Value: {portfolioValue().toFixed(2)}</p>\n            <p>Total Return: {totalReturn()}%</p>\n          </div>\n        </div>\n        <div id=\"pie-container\">\n          <DoughnutChart portfolio={props.portfolio} stocks={props.stocks} />\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}