{"ast":null,"code":"var _jsxFileName = \"/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/PaperTrade.tsx\";\nimport React from 'react';\nimport \"./PaperTrade.css\";\nimport SearchForm from './components/forms/SearchForm';\nimport PortfolioDetails from './PortfolioDetails';\nimport { Route, Routes } from \"react-router-dom\";\nimport Edit from \"./components/edit\";\nimport StockList from './components/stockList';\nimport { getThisUserJSON } from './helpers';\nimport Header from './components/header'; // const defaultPortfolio =  {\n//     name: \"Tech Stocks\",\n//     cash: 1000000,\n//     // stocks: [{\n//     //     symbol: \"AAPL\",\n//     //     latestPrice: 132.32,\n//     //     quantity: 200,\n//     //     pricePurchased: 110.23,\n//     // },\n//     // {\n//     //     symbol: \"AMZN\",\n//     //     latestPrice: 3456.32,\n//     //     quantity: 100,\n//     //     pricePurchased: 2342.32,\n//     // }]\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PaperTrade extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      userID: this.props.userID,\n      portfolio: undefined,\n      userJSON: undefined,\n      stocks: undefined,\n      JSONOrString: \"\",\n      stockJSON: undefined\n    };\n  }\n\n  componentDidMount() {\n    // console.log(\"papertrade mounted\")\n    getThisUserJSON(this.props.userID._id.$oid).then(userJSON => {\n      if (userJSON) {\n        // console.log(`component gets user as ${user}`)\n        // console.log(`user's username is ${user._id}`)\n        this.setState({\n          userJSON: userJSON,\n          stocks: userJSON.stocks\n        });\n      }\n    });\n  }\n\n  // // This method fetches the stocks from the database.\n  // setStocks() { \n  //     getThisUserStocks(this.state.userJSON._id.$oid).then((stocks) => {\n  //         if (stocks) {\n  //             console.log(stocks)\n  //             this.setState({\n  //                 stocks: stocks,\n  //             });\n  //         }\n  //     })\n  // };\n  handleSearch(JSONOrString) {\n    if (typeof JSONOrString === 'string') {\n      this.setState({\n        JSONOrString: JSONOrString,\n        stockJSON: undefined\n      });\n    } else {\n      this.setState({\n        JSONOrString: JSONOrString,\n        stockJSON: JSONOrString\n      });\n    }\n  } // async handleBuy(cost: number, quantity: number, stockJSON: IRootObject) {\n  //     const portfolio = this.state.portfolio\n  //     const newStock = {\n  //         symbol: stockJSON.symbol,\n  //         quantity: quantity,\n  //         pricePurchased: stockJSON.latestPrice,\n  //     }\n  //     console.log(newStock)\n  // check sufficient cash\n  // if (portfolio.cash > cost) {\n  //     portfolio.cash = portfolio.cash - cost;\n  //     await fetch(\"http://localhost:5000/stocks/add\", {\n  //         method: \"POST\",\n  //         headers: {\n  //         \"Content-Type\": \"application/json\",\n  //         },\n  //         body: JSON.stringify(newStock),\n  //     })\n  //     .then(foo => {\n  //         this.setStocks()\n  //     })\n  //     .catch(error => {\n  //         window.alert(error);\n  //         return;\n  //     });\n  // }\n  // }\n\n\n  render() {\n    this.handleSearch = this.handleSearch.bind(this); // this.handleBuy = this.handleBuy.bind(this)\n    // this.getStocks()\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        username: this.state.userJSON.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PortfolioDetails, {\n        portfolio: this.state.portfolio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"forms\",\n        children: /*#__PURE__*/_jsxDEV(SearchForm, {\n          userJSON: this.state.userJSON,\n          portfolio: this.state.portfolio,\n          JSONOrString: this.state.JSONOrString,\n          handleSearch: this.handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/edit/:id\",\n          element: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(StockList, {\n            stocks: this.state.stocks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default PaperTrade;","map":{"version":3,"sources":["/Users/JunWeiHuang/Google Drive/PersonalProjects/Javascript/paperTrade-mongo/frontend/src/PaperTrade.tsx"],"names":["React","SearchForm","PortfolioDetails","Route","Routes","Edit","StockList","getThisUserJSON","Header","PaperTrade","Component","state","userID","props","portfolio","undefined","userJSON","stocks","JSONOrString","stockJSON","componentDidMount","_id","$oid","then","setState","handleSearch","render","bind","username"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { IRootObject, Portfolio, Stock, userID, userJSON } from './interfaces';\nimport \"./PaperTrade.css\"\n\nimport SearchForm from './components/forms/SearchForm';\nimport PortfolioDetails from './PortfolioDetails';\n\nimport { Route, Routes, useParams } from \"react-router-dom\";\n\nimport Edit from \"./components/edit\";\nimport StockList from './components/stockList';\nimport { getThisUserJSON, getThisUserStocks } from './helpers';\nimport Header from './components/header';\n\n\n// const defaultPortfolio =  {\n//     name: \"Tech Stocks\",\n//     cash: 1000000,\n//     // stocks: [{\n//     //     symbol: \"AAPL\",\n//     //     latestPrice: 132.32,\n//     //     quantity: 200,\n//     //     pricePurchased: 110.23,\n//     // },\n//     // {\n//     //     symbol: \"AMZN\",\n//     //     latestPrice: 3456.32,\n//     //     quantity: 100,\n//     //     pricePurchased: 2342.32,\n//     // }]\n// }\n\ntype PaperTradeProps = {\n    userID: userID\n}\ntype PaperTradeState = {\n    userID: userID,\n    portfolio?: Portfolio\n    userJSON?: userJSON\n    stocks?: Stock[]\n    JSONOrString: IRootObject | string\n    stockJSON?: IRootObject\n}\n\nclass PaperTrade extends React.Component<PaperTradeProps, PaperTradeState> {\n    state={\n        userID: this.props.userID,\n        portfolio: undefined,\n        userJSON: undefined,\n        stocks: undefined,\n        JSONOrString: \"\",\n        stockJSON: undefined,\n    }\n    \n\n    componentDidMount() {\n        // console.log(\"papertrade mounted\")\n        getThisUserJSON(this.props.userID._id.$oid).then((userJSON) => {\n            if (userJSON) {\n                // console.log(`component gets user as ${user}`)\n                // console.log(`user's username is ${user._id}`)\n                this.setState({\n                    userJSON: userJSON,\n                    stocks: userJSON.stocks,\n                })\n            }\n        })\n    };\n \n    // // This method fetches the stocks from the database.\n    // setStocks() { \n    //     getThisUserStocks(this.state.userJSON._id.$oid).then((stocks) => {\n    //         if (stocks) {\n    //             console.log(stocks)\n    //             this.setState({\n    //                 stocks: stocks,\n    //             });\n    //         }\n    //     })\n    // };\n    \n\n    handleSearch(JSONOrString: IRootObject | string) {\n        if (typeof JSONOrString === 'string') {\n            this.setState({\n                JSONOrString: JSONOrString,\n                stockJSON: undefined,\n            })\n        } else {\n            this.setState({\n                JSONOrString: JSONOrString,\n                stockJSON: JSONOrString\n            });\n        }\n    }\n\n    // async handleBuy(cost: number, quantity: number, stockJSON: IRootObject) {\n\n    //     const portfolio = this.state.portfolio\n\n    //     const newStock = {\n    //         symbol: stockJSON.symbol,\n    //         quantity: quantity,\n    //         pricePurchased: stockJSON.latestPrice,\n    //     }\n\n    //     console.log(newStock)\n\n        \n        \n\n        \n\n        // check sufficient cash\n        // if (portfolio.cash > cost) {\n        //     portfolio.cash = portfolio.cash - cost;\n        //     await fetch(\"http://localhost:5000/stocks/add\", {\n        //         method: \"POST\",\n        //         headers: {\n        //         \"Content-Type\": \"application/json\",\n        //         },\n        //         body: JSON.stringify(newStock),\n        //     })\n        //     .then(foo => {\n        //         this.setStocks()\n        //     })\n        //     .catch(error => {\n        //         window.alert(error);\n        //         return;\n        //     });\n            \n        // }\n    // }\n\n    render() {\n        this.handleSearch = this.handleSearch.bind(this)\n        // this.handleBuy = this.handleBuy.bind(this)\n        // this.getStocks()\n\n        return(\n            <div className=\"container\">\n                <Header username={this.state.userJSON.username}/>\n                <PortfolioDetails portfolio={this.state.portfolio}/>\n                <div id=\"forms\">\n                    <SearchForm \n                        userJSON={this.state.userJSON}\n                        portfolio={this.state.portfolio}\n                        JSONOrString={this.state.JSONOrString} \n                        handleSearch={this.handleSearch}/>\n                </div>\n                <Routes>\n                    {/* <Navbar />\n                    <Route path=\"/edit/:id\" element={<Edit />} />\n                        <Route path=\"/create\" element={<Create />} /> */}\n                        <Route path=\"/edit/:id\" element={<Edit />} />\n                    <Route path=\"/\" element={<StockList stocks={this.state.stocks}/>} />\n                </Routes>\n                {/* {this.state.portfolio && <PortfolioTable portfolio={this.state.portfolio}/>} */}\n            </div>\n        )\n    }\n}\n\nexport default PaperTrade;\n"]},"metadata":{},"sourceType":"module"}